//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MBKBaseViewController.h"

@class LGSideMenuBorderView, LGSideMenuGesturesHandler, LGSideMenuView, NSNumber, UIBlurEffect, UIColor, UIImage, UIImageView, UIPanGestureRecognizer, UITapGestureRecognizer, UIView, UIViewController, UIVisualEffectView;
@protocol LGSideMenuDelegate;

@interface LGSideMenuController : MBKBaseViewController
{
    _Bool _rootViewShouldAutorotate;
    _Bool _rootViewStatusBarHidden;
    _Bool _leftViewStatusBarHidden;
    _Bool _rightViewStatusBarHidden;
    _Bool _leftViewHidesOnTouch;
    _Bool _rightViewHidesOnTouch;
    _Bool _leftViewSwipeGestureEnabled;
    _Bool _rightViewSwipeGestureEnabled;
    _Bool _shouldHideLeftViewAnimated;
    _Bool _shouldHideRightViewAnimated;
    _Bool _leftViewEnabled;
    _Bool _rightViewEnabled;
    _Bool _leftViewShowing;
    _Bool _rightViewShowing;
    _Bool _leftViewGoingToShow;
    _Bool _leftViewGoingToHide;
    _Bool _rightViewGoingToShow;
    _Bool _rightViewGoingToHide;
    _Bool _leftViewShowingBeforeGesture;
    _Bool _rightViewShowingBeforeGesture;
    _Bool _needsUpdateLayoutsAndStyles;
    _Bool _userRootViewShouldAutorotate;
    _Bool _userRootViewStatusBarHidden;
    _Bool _userLeftViewStatusBarHidden;
    _Bool _userRightViewStatusBarHidden;
    _Bool _userRootViewStatusBarStyle;
    _Bool _userLeftViewStatusBarStyle;
    _Bool _userRightViewStatusBarStyle;
    _Bool _userRootViewStatusBarUpdateAnimation;
    _Bool _userLeftViewStatusBarUpdateAnimation;
    _Bool _userRightViewStatusBarUpdateAnimation;
    _Bool _userRootViewCoverColorForLeftView;
    _Bool _userRootViewCoverColorForRightView;
    _Bool _userLeftViewCoverColor;
    _Bool _userRightViewCoverColor;
    _Bool _userRootViewScaleForLeftView;
    _Bool _userRootViewScaleForRightView;
    _Bool _userLeftViewInitialScale;
    _Bool _userRightViewInitialScale;
    _Bool _userLeftViewInitialOffsetX;
    _Bool _userRightViewInitialOffsetX;
    _Bool _userLeftViewBackgroundImageInitialScale;
    _Bool _userRightViewBackgroundImageInitialScale;
    _Bool _userLeftViewBackgroundImageFinalScale;
    _Bool _userRightViewBackgroundImageFinalScale;
    long long _rootViewStatusBarStyle;
    long long _leftViewStatusBarStyle;
    long long _rightViewStatusBarStyle;
    long long _rootViewStatusBarUpdateAnimation;
    long long _leftViewStatusBarUpdateAnimation;
    long long _rightViewStatusBarUpdateAnimation;
    UIColor *_rootViewCoverColorForLeftView;
    UIColor *_rootViewCoverColorForRightView;
    UIColor *_leftViewCoverColor;
    UIColor *_rightViewCoverColor;
    double _rootViewScaleForLeftView;
    double _rootViewScaleForRightView;
    double _leftViewInitialScale;
    double _rightViewInitialScale;
    double _leftViewInitialOffsetX;
    double _rightViewInitialOffsetX;
    double _leftViewBackgroundImageInitialScale;
    double _rightViewBackgroundImageInitialScale;
    double _leftViewBackgroundImageFinalScale;
    double _rightViewBackgroundImageFinalScale;
    UIViewController *_rootViewController;
    UIViewController *_leftViewController;
    UIViewController *_rightViewController;
    UIView *_rootView;
    UIView *_leftView;
    UIView *_rightView;
    LGSideMenuView *_rootViewContainer;
    LGSideMenuView *_leftViewContainer;
    LGSideMenuView *_rightViewContainer;
    UIImageView *_leftViewBackgroundView;
    UIImageView *_rightViewBackgroundView;
    UITapGestureRecognizer *_tapGesture;
    UIPanGestureRecognizer *_panGesture;
    double _leftViewWidth;
    double _rightViewWidth;
    unsigned long long _leftViewPresentationStyle;
    unsigned long long _rightViewPresentationStyle;
    unsigned long long _leftViewAlwaysVisibleOptions;
    unsigned long long _rightViewAlwaysVisibleOptions;
    unsigned long long _swipeGestureArea;
    double _leftViewAnimationDuration;
    double _rightViewAnimationDuration;
    UIColor *_leftViewBackgroundColor;
    UIColor *_rightViewBackgroundColor;
    UIImage *_leftViewBackgroundImage;
    UIImage *_rightViewBackgroundImage;
    UIBlurEffect *_leftViewBackgroundBlurEffect;
    UIBlurEffect *_rightViewBackgroundBlurEffect;
    double _leftViewBackgroundAlpha;
    double _rightViewBackgroundAlpha;
    UIColor *_rootViewLayerBorderColor;
    UIColor *_leftViewLayerBorderColor;
    UIColor *_rightViewLayerBorderColor;
    double _rootViewLayerBorderWidth;
    double _leftViewLayerBorderWidth;
    double _rightViewLayerBorderWidth;
    UIColor *_rootViewLayerShadowColor;
    UIColor *_leftViewLayerShadowColor;
    UIColor *_rightViewLayerShadowColor;
    double _rootViewLayerShadowRadius;
    double _leftViewLayerShadowRadius;
    double _rightViewLayerShadowRadius;
    UIBlurEffect *_rootViewCoverBlurEffectForLeftView;
    UIBlurEffect *_rootViewCoverBlurEffectForRightView;
    UIBlurEffect *_leftViewCoverBlurEffect;
    UIBlurEffect *_rightViewCoverBlurEffect;
    double _rootViewCoverAlphaForLeftView;
    double _rootViewCoverAlphaForRightView;
    double _leftViewCoverAlpha;
    double _rightViewCoverAlpha;
    CDUnknownBlockType _willShowLeftView;
    CDUnknownBlockType _didShowLeftView;
    CDUnknownBlockType _willHideLeftView;
    CDUnknownBlockType _didHideLeftView;
    CDUnknownBlockType _willShowRightView;
    CDUnknownBlockType _didShowRightView;
    CDUnknownBlockType _willHideRightView;
    CDUnknownBlockType _didHideRightView;
    CDUnknownBlockType _showLeftViewAnimations;
    CDUnknownBlockType _hideLeftViewAnimations;
    CDUnknownBlockType _showRightViewAnimations;
    CDUnknownBlockType _hideRightViewAnimations;
    id <LGSideMenuDelegate> _delegate;
    LGSideMenuBorderView *_rootViewStyleView;
    UIVisualEffectView *_rootViewCoverView;
    UIVisualEffectView *_leftViewStyleView;
    LGSideMenuBorderView *_leftViewBorderView;
    UIVisualEffectView *_rightViewStyleView;
    LGSideMenuBorderView *_rightViewBorderView;
    UIVisualEffectView *_sideViewsCoverView;
    NSNumber *_leftViewGestireStartX;
    NSNumber *_rightViewGestireStartX;
    LGSideMenuGesturesHandler *_gesturesHandler;
    struct LGSideMenuSwipeGestureRange _leftViewSwipeGestureRange;
    struct LGSideMenuSwipeGestureRange _rightViewSwipeGestureRange;
    struct CGSize _savedSize;
}

+ (id)sideMenuControllerWithRootView:(id)arg1 leftView:(id)arg2 rightView:(id)arg3;
+ (id)sideMenuControllerWithRootView:(id)arg1;
+ (id)sideMenuControllerWithRootViewController:(id)arg1 leftViewController:(id)arg2 rightViewController:(id)arg3;
+ (id)sideMenuControllerWithRootViewController:(id)arg1;
@property(nonatomic, getter=isUserRightViewBackgroundImageFinalScale) _Bool userRightViewBackgroundImageFinalScale; // @synthesize userRightViewBackgroundImageFinalScale=_userRightViewBackgroundImageFinalScale;
@property(nonatomic, getter=isUserLeftViewBackgroundImageFinalScale) _Bool userLeftViewBackgroundImageFinalScale; // @synthesize userLeftViewBackgroundImageFinalScale=_userLeftViewBackgroundImageFinalScale;
@property(nonatomic, getter=isUserRightViewBackgroundImageInitialScale) _Bool userRightViewBackgroundImageInitialScale; // @synthesize userRightViewBackgroundImageInitialScale=_userRightViewBackgroundImageInitialScale;
@property(nonatomic, getter=isUserLeftViewBackgroundImageInitialScale) _Bool userLeftViewBackgroundImageInitialScale; // @synthesize userLeftViewBackgroundImageInitialScale=_userLeftViewBackgroundImageInitialScale;
@property(nonatomic, getter=isUserRightViewInitialOffsetX) _Bool userRightViewInitialOffsetX; // @synthesize userRightViewInitialOffsetX=_userRightViewInitialOffsetX;
@property(nonatomic, getter=isUserLeftViewInitialOffsetX) _Bool userLeftViewInitialOffsetX; // @synthesize userLeftViewInitialOffsetX=_userLeftViewInitialOffsetX;
@property(nonatomic, getter=isUserRightViewInitialScale) _Bool userRightViewInitialScale; // @synthesize userRightViewInitialScale=_userRightViewInitialScale;
@property(nonatomic, getter=isUserLeftViewInitialScale) _Bool userLeftViewInitialScale; // @synthesize userLeftViewInitialScale=_userLeftViewInitialScale;
@property(nonatomic, getter=isUserRootViewScaleForRightView) _Bool userRootViewScaleForRightView; // @synthesize userRootViewScaleForRightView=_userRootViewScaleForRightView;
@property(nonatomic, getter=isUserRootViewScaleForLeftView) _Bool userRootViewScaleForLeftView; // @synthesize userRootViewScaleForLeftView=_userRootViewScaleForLeftView;
@property(nonatomic, getter=isUserRightViewCoverColor) _Bool userRightViewCoverColor; // @synthesize userRightViewCoverColor=_userRightViewCoverColor;
@property(nonatomic, getter=isUserLeftViewCoverColor) _Bool userLeftViewCoverColor; // @synthesize userLeftViewCoverColor=_userLeftViewCoverColor;
@property(nonatomic, getter=isUserRootViewCoverColorForRightView) _Bool userRootViewCoverColorForRightView; // @synthesize userRootViewCoverColorForRightView=_userRootViewCoverColorForRightView;
@property(nonatomic, getter=isUserRootViewCoverColorForLeftView) _Bool userRootViewCoverColorForLeftView; // @synthesize userRootViewCoverColorForLeftView=_userRootViewCoverColorForLeftView;
@property(nonatomic, getter=isUserRightViewStatusBarUpdateAnimation) _Bool userRightViewStatusBarUpdateAnimation; // @synthesize userRightViewStatusBarUpdateAnimation=_userRightViewStatusBarUpdateAnimation;
@property(nonatomic, getter=isUserLeftViewStatusBarUpdateAnimation) _Bool userLeftViewStatusBarUpdateAnimation; // @synthesize userLeftViewStatusBarUpdateAnimation=_userLeftViewStatusBarUpdateAnimation;
@property(nonatomic, getter=isUserRootViewStatusBarUpdateAnimation) _Bool userRootViewStatusBarUpdateAnimation; // @synthesize userRootViewStatusBarUpdateAnimation=_userRootViewStatusBarUpdateAnimation;
@property(nonatomic, getter=isUserRightViewStatusBarStyle) _Bool userRightViewStatusBarStyle; // @synthesize userRightViewStatusBarStyle=_userRightViewStatusBarStyle;
@property(nonatomic, getter=isUserLeftViewStatusBarStyle) _Bool userLeftViewStatusBarStyle; // @synthesize userLeftViewStatusBarStyle=_userLeftViewStatusBarStyle;
@property(nonatomic, getter=isUserRootViewStatusBarStyle) _Bool userRootViewStatusBarStyle; // @synthesize userRootViewStatusBarStyle=_userRootViewStatusBarStyle;
@property(nonatomic, getter=isUserRightViewStatusBarHidden) _Bool userRightViewStatusBarHidden; // @synthesize userRightViewStatusBarHidden=_userRightViewStatusBarHidden;
@property(nonatomic, getter=isUserLeftViewStatusBarHidden) _Bool userLeftViewStatusBarHidden; // @synthesize userLeftViewStatusBarHidden=_userLeftViewStatusBarHidden;
@property(nonatomic, getter=isUserRootViewStatusBarHidden) _Bool userRootViewStatusBarHidden; // @synthesize userRootViewStatusBarHidden=_userRootViewStatusBarHidden;
@property(nonatomic, getter=isUserRootViewShouldAutorotate) _Bool userRootViewShouldAutorotate; // @synthesize userRootViewShouldAutorotate=_userRootViewShouldAutorotate;
@property(nonatomic, getter=isNeedsUpdateLayoutsAndStyles) _Bool needsUpdateLayoutsAndStyles; // @synthesize needsUpdateLayoutsAndStyles=_needsUpdateLayoutsAndStyles;
@property(retain, nonatomic) LGSideMenuGesturesHandler *gesturesHandler; // @synthesize gesturesHandler=_gesturesHandler;
@property(nonatomic, getter=isRightViewShowingBeforeGesture) _Bool rightViewShowingBeforeGesture; // @synthesize rightViewShowingBeforeGesture=_rightViewShowingBeforeGesture;
@property(nonatomic, getter=isLeftViewShowingBeforeGesture) _Bool leftViewShowingBeforeGesture; // @synthesize leftViewShowingBeforeGesture=_leftViewShowingBeforeGesture;
@property(retain, nonatomic) NSNumber *rightViewGestireStartX; // @synthesize rightViewGestireStartX=_rightViewGestireStartX;
@property(retain, nonatomic) NSNumber *leftViewGestireStartX; // @synthesize leftViewGestireStartX=_leftViewGestireStartX;
@property(retain, nonatomic) UIVisualEffectView *sideViewsCoverView; // @synthesize sideViewsCoverView=_sideViewsCoverView;
@property(retain, nonatomic) LGSideMenuBorderView *rightViewBorderView; // @synthesize rightViewBorderView=_rightViewBorderView;
@property(retain, nonatomic) UIVisualEffectView *rightViewStyleView; // @synthesize rightViewStyleView=_rightViewStyleView;
@property(retain, nonatomic) LGSideMenuBorderView *leftViewBorderView; // @synthesize leftViewBorderView=_leftViewBorderView;
@property(retain, nonatomic) UIVisualEffectView *leftViewStyleView; // @synthesize leftViewStyleView=_leftViewStyleView;
@property(retain, nonatomic) UIVisualEffectView *rootViewCoverView; // @synthesize rootViewCoverView=_rootViewCoverView;
@property(retain, nonatomic) LGSideMenuBorderView *rootViewStyleView; // @synthesize rootViewStyleView=_rootViewStyleView;
@property(nonatomic) struct CGSize savedSize; // @synthesize savedSize=_savedSize;
@property(nonatomic, getter=isRightViewGoingToHide) _Bool rightViewGoingToHide; // @synthesize rightViewGoingToHide=_rightViewGoingToHide;
@property(nonatomic, getter=isRightViewGoingToShow) _Bool rightViewGoingToShow; // @synthesize rightViewGoingToShow=_rightViewGoingToShow;
@property(nonatomic, getter=isLeftViewGoingToHide) _Bool leftViewGoingToHide; // @synthesize leftViewGoingToHide=_leftViewGoingToHide;
@property(nonatomic, getter=isLeftViewGoingToShow) _Bool leftViewGoingToShow; // @synthesize leftViewGoingToShow=_leftViewGoingToShow;
@property(nonatomic) __weak id <LGSideMenuDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) CDUnknownBlockType hideRightViewAnimations; // @synthesize hideRightViewAnimations=_hideRightViewAnimations;
@property(copy, nonatomic) CDUnknownBlockType showRightViewAnimations; // @synthesize showRightViewAnimations=_showRightViewAnimations;
@property(copy, nonatomic) CDUnknownBlockType hideLeftViewAnimations; // @synthesize hideLeftViewAnimations=_hideLeftViewAnimations;
@property(copy, nonatomic) CDUnknownBlockType showLeftViewAnimations; // @synthesize showLeftViewAnimations=_showLeftViewAnimations;
@property(copy, nonatomic) CDUnknownBlockType didHideRightView; // @synthesize didHideRightView=_didHideRightView;
@property(copy, nonatomic) CDUnknownBlockType willHideRightView; // @synthesize willHideRightView=_willHideRightView;
@property(copy, nonatomic) CDUnknownBlockType didShowRightView; // @synthesize didShowRightView=_didShowRightView;
@property(copy, nonatomic) CDUnknownBlockType willShowRightView; // @synthesize willShowRightView=_willShowRightView;
@property(copy, nonatomic) CDUnknownBlockType didHideLeftView; // @synthesize didHideLeftView=_didHideLeftView;
@property(copy, nonatomic) CDUnknownBlockType willHideLeftView; // @synthesize willHideLeftView=_willHideLeftView;
@property(copy, nonatomic) CDUnknownBlockType didShowLeftView; // @synthesize didShowLeftView=_didShowLeftView;
@property(copy, nonatomic) CDUnknownBlockType willShowLeftView; // @synthesize willShowLeftView=_willShowLeftView;
@property(nonatomic, getter=isRightViewShowing) _Bool rightViewShowing; // @synthesize rightViewShowing=_rightViewShowing;
@property(nonatomic, getter=isLeftViewShowing) _Bool leftViewShowing; // @synthesize leftViewShowing=_leftViewShowing;
@property(nonatomic) double rightViewCoverAlpha; // @synthesize rightViewCoverAlpha=_rightViewCoverAlpha;
@property(nonatomic) double leftViewCoverAlpha; // @synthesize leftViewCoverAlpha=_leftViewCoverAlpha;
@property(nonatomic) double rootViewCoverAlphaForRightView; // @synthesize rootViewCoverAlphaForRightView=_rootViewCoverAlphaForRightView;
@property(nonatomic) double rootViewCoverAlphaForLeftView; // @synthesize rootViewCoverAlphaForLeftView=_rootViewCoverAlphaForLeftView;
@property(retain, nonatomic) UIBlurEffect *rightViewCoverBlurEffect; // @synthesize rightViewCoverBlurEffect=_rightViewCoverBlurEffect;
@property(retain, nonatomic) UIBlurEffect *leftViewCoverBlurEffect; // @synthesize leftViewCoverBlurEffect=_leftViewCoverBlurEffect;
@property(retain, nonatomic) UIBlurEffect *rootViewCoverBlurEffectForRightView; // @synthesize rootViewCoverBlurEffectForRightView=_rootViewCoverBlurEffectForRightView;
@property(retain, nonatomic) UIBlurEffect *rootViewCoverBlurEffectForLeftView; // @synthesize rootViewCoverBlurEffectForLeftView=_rootViewCoverBlurEffectForLeftView;
@property(nonatomic) double rightViewLayerShadowRadius; // @synthesize rightViewLayerShadowRadius=_rightViewLayerShadowRadius;
@property(nonatomic) double leftViewLayerShadowRadius; // @synthesize leftViewLayerShadowRadius=_leftViewLayerShadowRadius;
@property(nonatomic) double rootViewLayerShadowRadius; // @synthesize rootViewLayerShadowRadius=_rootViewLayerShadowRadius;
@property(retain, nonatomic) UIColor *rightViewLayerShadowColor; // @synthesize rightViewLayerShadowColor=_rightViewLayerShadowColor;
@property(retain, nonatomic) UIColor *leftViewLayerShadowColor; // @synthesize leftViewLayerShadowColor=_leftViewLayerShadowColor;
@property(retain, nonatomic) UIColor *rootViewLayerShadowColor; // @synthesize rootViewLayerShadowColor=_rootViewLayerShadowColor;
@property(nonatomic) double rightViewLayerBorderWidth; // @synthesize rightViewLayerBorderWidth=_rightViewLayerBorderWidth;
@property(nonatomic) double leftViewLayerBorderWidth; // @synthesize leftViewLayerBorderWidth=_leftViewLayerBorderWidth;
@property(nonatomic) double rootViewLayerBorderWidth; // @synthesize rootViewLayerBorderWidth=_rootViewLayerBorderWidth;
@property(retain, nonatomic) UIColor *rightViewLayerBorderColor; // @synthesize rightViewLayerBorderColor=_rightViewLayerBorderColor;
@property(retain, nonatomic) UIColor *leftViewLayerBorderColor; // @synthesize leftViewLayerBorderColor=_leftViewLayerBorderColor;
@property(retain, nonatomic) UIColor *rootViewLayerBorderColor; // @synthesize rootViewLayerBorderColor=_rootViewLayerBorderColor;
@property(nonatomic) double rightViewBackgroundAlpha; // @synthesize rightViewBackgroundAlpha=_rightViewBackgroundAlpha;
@property(nonatomic) double leftViewBackgroundAlpha; // @synthesize leftViewBackgroundAlpha=_leftViewBackgroundAlpha;
@property(retain, nonatomic) UIBlurEffect *rightViewBackgroundBlurEffect; // @synthesize rightViewBackgroundBlurEffect=_rightViewBackgroundBlurEffect;
@property(retain, nonatomic) UIBlurEffect *leftViewBackgroundBlurEffect; // @synthesize leftViewBackgroundBlurEffect=_leftViewBackgroundBlurEffect;
@property(retain, nonatomic) UIImage *rightViewBackgroundImage; // @synthesize rightViewBackgroundImage=_rightViewBackgroundImage;
@property(retain, nonatomic) UIImage *leftViewBackgroundImage; // @synthesize leftViewBackgroundImage=_leftViewBackgroundImage;
@property(retain, nonatomic) UIColor *rightViewBackgroundColor; // @synthesize rightViewBackgroundColor=_rightViewBackgroundColor;
@property(retain, nonatomic) UIColor *leftViewBackgroundColor; // @synthesize leftViewBackgroundColor=_leftViewBackgroundColor;
@property(nonatomic, getter=isRightViewEnabled) _Bool rightViewEnabled; // @synthesize rightViewEnabled=_rightViewEnabled;
@property(nonatomic, getter=isLeftViewEnabled) _Bool leftViewEnabled; // @synthesize leftViewEnabled=_leftViewEnabled;
@property(nonatomic) _Bool shouldHideRightViewAnimated; // @synthesize shouldHideRightViewAnimated=_shouldHideRightViewAnimated;
@property(nonatomic) _Bool shouldHideLeftViewAnimated; // @synthesize shouldHideLeftViewAnimated=_shouldHideLeftViewAnimated;
@property(nonatomic) double rightViewAnimationDuration; // @synthesize rightViewAnimationDuration=_rightViewAnimationDuration;
@property(nonatomic) double leftViewAnimationDuration; // @synthesize leftViewAnimationDuration=_leftViewAnimationDuration;
@property(nonatomic) struct LGSideMenuSwipeGestureRange rightViewSwipeGestureRange; // @synthesize rightViewSwipeGestureRange=_rightViewSwipeGestureRange;
@property(nonatomic) struct LGSideMenuSwipeGestureRange leftViewSwipeGestureRange; // @synthesize leftViewSwipeGestureRange=_leftViewSwipeGestureRange;
@property(nonatomic) unsigned long long swipeGestureArea; // @synthesize swipeGestureArea=_swipeGestureArea;
@property(nonatomic, getter=isRightViewSwipeGestureEnabled) _Bool rightViewSwipeGestureEnabled; // @synthesize rightViewSwipeGestureEnabled=_rightViewSwipeGestureEnabled;
@property(nonatomic, getter=isLeftViewSwipeGestureEnabled) _Bool leftViewSwipeGestureEnabled; // @synthesize leftViewSwipeGestureEnabled=_leftViewSwipeGestureEnabled;
@property(nonatomic, getter=isRightViewHidesOnTouch) _Bool rightViewHidesOnTouch; // @synthesize rightViewHidesOnTouch=_rightViewHidesOnTouch;
@property(nonatomic, getter=isLeftViewHidesOnTouch) _Bool leftViewHidesOnTouch; // @synthesize leftViewHidesOnTouch=_leftViewHidesOnTouch;
@property(nonatomic) unsigned long long rightViewAlwaysVisibleOptions; // @synthesize rightViewAlwaysVisibleOptions=_rightViewAlwaysVisibleOptions;
@property(nonatomic) unsigned long long leftViewAlwaysVisibleOptions; // @synthesize leftViewAlwaysVisibleOptions=_leftViewAlwaysVisibleOptions;
@property(nonatomic) unsigned long long rightViewPresentationStyle; // @synthesize rightViewPresentationStyle=_rightViewPresentationStyle;
@property(nonatomic) unsigned long long leftViewPresentationStyle; // @synthesize leftViewPresentationStyle=_leftViewPresentationStyle;
@property(nonatomic) double rightViewWidth; // @synthesize rightViewWidth=_rightViewWidth;
@property(nonatomic) double leftViewWidth; // @synthesize leftViewWidth=_leftViewWidth;
@property(retain, nonatomic) UIPanGestureRecognizer *panGesture; // @synthesize panGesture=_panGesture;
@property(retain, nonatomic) UITapGestureRecognizer *tapGesture; // @synthesize tapGesture=_tapGesture;
@property(retain, nonatomic) UIImageView *rightViewBackgroundView; // @synthesize rightViewBackgroundView=_rightViewBackgroundView;
@property(retain, nonatomic) UIImageView *leftViewBackgroundView; // @synthesize leftViewBackgroundView=_leftViewBackgroundView;
@property(retain, nonatomic) LGSideMenuView *rightViewContainer; // @synthesize rightViewContainer=_rightViewContainer;
@property(retain, nonatomic) LGSideMenuView *leftViewContainer; // @synthesize leftViewContainer=_leftViewContainer;
@property(retain, nonatomic) LGSideMenuView *rootViewContainer; // @synthesize rootViewContainer=_rootViewContainer;
@property(retain, nonatomic) UIView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) UIView *leftView; // @synthesize leftView=_leftView;
@property(retain, nonatomic) UIView *rootView; // @synthesize rootView=_rootView;
@property(retain, nonatomic) UIViewController *rightViewController; // @synthesize rightViewController=_rightViewController;
@property(retain, nonatomic) UIViewController *leftViewController; // @synthesize leftViewController=_leftViewController;
@property(retain, nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
- (void).cxx_destruct;
- (void)panGesture:(id)arg1;
- (void)tapGesture:(id)arg1;
- (void)didHideRightViewCallbacks;
- (void)willHideRightViewCallbacks;
- (void)didShowRightViewCallbacks;
- (void)willShowRightViewCallbacks;
- (void)didHideLeftViewCallbacks;
- (void)willHideLeftViewCallbacks;
- (void)didShowLeftViewCallbacks;
- (void)willShowLeftViewCallbacks;
- (void)hideRightViewDoneWithGesture:(_Bool)arg1;
- (void)hideRightViewAnimatedActions:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)hideRightViewPrepareWithGesture:(_Bool)arg1;
- (void)showRightViewDoneWithGesture:(_Bool)arg1;
- (void)showRightViewAnimatedActions:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showRightViewPrepareWithGesture:(_Bool)arg1;
- (void)toggleRightViewAnimated:(_Bool)arg1 delay:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)hideRightViewAnimated:(_Bool)arg1 delay:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)showRightViewAnimated:(_Bool)arg1 delay:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)toggleRightViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)hideRightViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showRightViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)toggleRightViewAnimated:(id)arg1;
- (void)hideRightViewAnimated:(id)arg1;
- (void)showRightViewAnimated:(id)arg1;
- (void)toggleRightViewAnimated;
- (void)hideRightViewAnimated;
- (void)showRightViewAnimated;
- (void)toggleRightView:(id)arg1;
- (void)hideRightView:(id)arg1;
- (void)showRightView:(id)arg1;
- (void)toggleRightView;
- (void)hideRightView;
- (void)showRightView;
- (void)hideLeftViewDoneWithGesture:(_Bool)arg1;
- (void)hideLeftViewAnimatedActions:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)hideLeftViewPrepareWithGesture:(_Bool)arg1;
- (void)showLeftViewDoneWithGesture:(_Bool)arg1;
- (void)showLeftViewAnimatedActions:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showLeftViewPrepareWithGesture:(_Bool)arg1;
- (void)toggleLeftViewAnimated:(_Bool)arg1 delay:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)hideLeftViewAnimated:(_Bool)arg1 delay:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)showLeftViewAnimated:(_Bool)arg1 delay:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)toggleLeftViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)hideLeftViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showLeftViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)toggleLeftViewAnimated:(id)arg1;
- (void)hideLeftViewAnimated:(id)arg1;
- (void)showLeftViewAnimated:(id)arg1;
- (void)toggleLeftViewAnimated;
- (void)hideLeftViewAnimated;
- (void)showLeftViewAnimated;
- (void)toggleLeftView:(id)arg1;
- (void)hideLeftView:(id)arg1;
- (void)showLeftView:(id)arg1;
- (void)toggleLeftView;
- (void)hideLeftView;
- (void)showLeftView;
- (void)visibilityValidateWithDelay:(double)arg1;
- (void)visibilityValidate;
- (void)stylesValidate;
- (void)rightViewsTransformValidateWithPercentage:(double)arg1;
- (void)rightViewsTransformValidate;
- (void)rightViewsFramesValidate;
- (void)leftViewsTransformValidateWithPercentage:(double)arg1;
- (void)leftViewsTransformValidate;
- (void)leftViewsFramesValidate;
- (void)rootViewsTransformValidateWithPercentage:(double)arg1;
- (void)rootViewsTransformValidate;
- (void)rootViewsFramesValidate;
- (void)viewsHierarchyValidate;
- (void)rightViewsValidate;
- (void)leftViewsValidate;
- (void)rootViewsValidate;
- (void)removeRightViews;
- (void)removeLeftViews;
- (void)removeRootViews;
- (_Bool)isRightViewAlwaysVisibleForOrientation:(long long)arg1;
- (_Bool)isLeftViewAlwaysVisibleForOrientation:(long long)arg1;
@property(readonly, nonatomic, getter=isRightViewAlwaysVisibleForCurrentOrientation) _Bool rightViewAlwaysVisibleForCurrentOrientation;
@property(readonly, nonatomic, getter=isLeftViewAlwaysVisibleForCurrentOrientation) _Bool leftViewAlwaysVisibleForCurrentOrientation;
@property(nonatomic, getter=isRightViewSwipeGestureDisabled) _Bool rightViewSwipeGestureDisabled;
@property(nonatomic, getter=isLeftViewSwipeGestureDisabled) _Bool leftViewSwipeGestureDisabled;
@property(readonly, nonatomic, getter=isRightViewHidden) _Bool rightViewHidden;
- (void)setRightViewHidden:(_Bool)arg1;
@property(readonly, nonatomic, getter=isLeftViewHidden) _Bool leftViewHidden;
- (void)setLeftViewHidden:(_Bool)arg1;
@property(nonatomic, getter=isRightViewDisabled) _Bool rightViewDisabled;
@property(nonatomic, getter=isLeftViewDisabled) _Bool leftViewDisabled;
@property(readonly, nonatomic, getter=isRightViewVisible) _Bool rightViewVisible;
@property(readonly, nonatomic, getter=isLeftViewVisible) _Bool leftViewVisible;
@property(nonatomic) double rightViewBackgroundImageFinalScale; // @synthesize rightViewBackgroundImageFinalScale=_rightViewBackgroundImageFinalScale;
@property(nonatomic) double leftViewBackgroundImageFinalScale; // @synthesize leftViewBackgroundImageFinalScale=_leftViewBackgroundImageFinalScale;
@property(nonatomic) double rightViewBackgroundImageInitialScale; // @synthesize rightViewBackgroundImageInitialScale=_rightViewBackgroundImageInitialScale;
@property(nonatomic) double leftViewBackgroundImageInitialScale; // @synthesize leftViewBackgroundImageInitialScale=_leftViewBackgroundImageInitialScale;
@property(nonatomic) double rightViewInitialOffsetX; // @synthesize rightViewInitialOffsetX=_rightViewInitialOffsetX;
@property(nonatomic) double leftViewInitialOffsetX; // @synthesize leftViewInitialOffsetX=_leftViewInitialOffsetX;
@property(nonatomic) double rightViewInitialScale; // @synthesize rightViewInitialScale=_rightViewInitialScale;
@property(nonatomic) double leftViewInitialScale; // @synthesize leftViewInitialScale=_leftViewInitialScale;
@property(nonatomic) double rootViewScaleForRightView; // @synthesize rootViewScaleForRightView=_rootViewScaleForRightView;
@property(nonatomic) double rootViewScaleForLeftView; // @synthesize rootViewScaleForLeftView=_rootViewScaleForLeftView;
@property(retain, nonatomic) UIColor *rightViewCoverColor; // @synthesize rightViewCoverColor=_rightViewCoverColor;
@property(retain, nonatomic) UIColor *leftViewCoverColor; // @synthesize leftViewCoverColor=_leftViewCoverColor;
@property(retain, nonatomic) UIColor *rootViewCoverColorForRightView; // @synthesize rootViewCoverColorForRightView=_rootViewCoverColorForRightView;
@property(retain, nonatomic) UIColor *rootViewCoverColorForLeftView; // @synthesize rootViewCoverColorForLeftView=_rootViewCoverColorForLeftView;
@property(nonatomic) long long rightViewStatusBarUpdateAnimation; // @synthesize rightViewStatusBarUpdateAnimation=_rightViewStatusBarUpdateAnimation;
@property(nonatomic) long long leftViewStatusBarUpdateAnimation; // @synthesize leftViewStatusBarUpdateAnimation=_leftViewStatusBarUpdateAnimation;
@property(nonatomic) long long rootViewStatusBarUpdateAnimation; // @synthesize rootViewStatusBarUpdateAnimation=_rootViewStatusBarUpdateAnimation;
@property(nonatomic) long long rightViewStatusBarStyle; // @synthesize rightViewStatusBarStyle=_rightViewStatusBarStyle;
@property(nonatomic) long long leftViewStatusBarStyle; // @synthesize leftViewStatusBarStyle=_leftViewStatusBarStyle;
@property(nonatomic) long long rootViewStatusBarStyle; // @synthesize rootViewStatusBarStyle=_rootViewStatusBarStyle;
@property(nonatomic, getter=isRightViewStatusBarHidden) _Bool rightViewStatusBarHidden; // @synthesize rightViewStatusBarHidden=_rightViewStatusBarHidden;
@property(nonatomic, getter=isLeftViewStatusBarHidden) _Bool leftViewStatusBarHidden; // @synthesize leftViewStatusBarHidden=_leftViewStatusBarHidden;
@property(nonatomic, getter=isRootViewStatusBarHidden) _Bool rootViewStatusBarHidden; // @synthesize rootViewStatusBarHidden=_rootViewStatusBarHidden;
@property(nonatomic) _Bool rootViewShouldAutorotate; // @synthesize rootViewShouldAutorotate=_rootViewShouldAutorotate;
- (void)updateLayoutsAndStylesWithDelay:(double)arg1;
- (void)updateLayoutsAndStyles;
- (void)setNeedsUpdateLayoutsAndStyles;
- (long long)preferredStatusBarUpdateAnimation;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)shouldAutorotate;
- (void)rightViewWillLayoutSubviewsWithSize:(struct CGSize)arg1;
- (void)leftViewWillLayoutSubviewsWithSize:(struct CGSize)arg1;
- (void)rootViewWillLayoutSubviewsWithSize:(struct CGSize)arg1;
- (void)viewWillLayoutSubviews;
- (void)setupDefaultProperties;
- (void)setupDefaults;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithRootView:(id)arg1 leftView:(id)arg2 rightView:(id)arg3;
- (id)initWithRootView:(id)arg1;
- (id)initWithRootViewController:(id)arg1 leftViewController:(id)arg2 rightViewController:(id)arg3;
- (id)initWithRootViewController:(id)arg1;
- (id)init;
- (void)setRightViewEnabledWithWidth:(double)arg1 presentationStyle:(unsigned long long)arg2 alwaysVisibleOptions:(unsigned long long)arg3;
- (void)setLeftViewEnabledWithWidth:(double)arg1 presentationStyle:(unsigned long long)arg2 alwaysVisibleOptions:(unsigned long long)arg3;
- (void)showHideRightViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showHideLeftViewAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)isRightViewAlwaysVisibleForInterfaceOrientation:(long long)arg1;
- (_Bool)isLeftViewAlwaysVisibleForInterfaceOrientation:(long long)arg1;
@property(copy, nonatomic) CDUnknownBlockType hideRightViewAnimationsBlock;
@property(copy, nonatomic) CDUnknownBlockType showRightViewAnimationsBlock;
@property(copy, nonatomic) CDUnknownBlockType hideLeftViewAnimationsBlock;
@property(copy, nonatomic) CDUnknownBlockType showLeftViewAnimationsBlock;
@property(nonatomic) double rightViewAnimationSpeed;
@property(nonatomic) double leftViewAnimationSpeed;
@property(readonly, nonatomic, getter=isRightViewAlwaysVisible) _Bool rightViewAlwaysVisible;
@property(readonly, nonatomic, getter=isLeftViewAlwaysVisible) _Bool leftViewAlwaysVisible;
@property(nonatomic, getter=isShouldShowRightView) _Bool shouldShowRightView;
@property(nonatomic, getter=isShouldShowLeftView) _Bool shouldShowLeftView;

@end

