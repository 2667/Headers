//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <QQMainProject/IContentUpdateDelegate-Protocol.h>

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, QQLockArray, SpriteNativeConfigData, SpriteNetReqCenter;
@protocol OS_dispatch_queue, SpriteDataManagerDelegate, SpriteDataManagerGamePanelDelegate;

@interface SpriteDataManager : NSObject <IContentUpdateDelegate>
{
    SpriteNativeConfigData *_configData;
    SpriteNetReqCenter *_netCenter;
    NSMutableArray *_allRoleIds;
    NSMutableArray *_allDressIds;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _loginFlag;
    _Bool _needLoadFavorite;
    _Bool _updateActionJsonFlag;
    _Bool _updateGameJsonFlag;
    int _needChkActionAgain;
    int _needChkCollectionAgain;
    _Bool isActionJsonNew;
    _Bool isGamePanelNew;
    _Bool isLoadingOfflineRes;
    _Bool grayscaleSwitch;
    _Bool showActSwitch;
    _Bool _isAppBackground;
    _Bool _needViewProgress;
    _Bool _spriteViewHidden;
    _Bool _needCheckGameJson;
    unsigned int _gameJsonVerInFile;
    unsigned int _actionJsonVerInFile;
    int _resFinishTag;
    int _checkGameListStatus;
    unsigned int _gameTabJsonIntervalTS;
    id <SpriteDataManagerDelegate> delegate;
    id <SpriteDataManagerGamePanelDelegate> gamePanelDelegate;
    NSMutableDictionary *offlineModels;
    NSDictionary *switchConfig;
    NSMutableArray *loginRequest;
    unsigned long long _appStartTime;
    NSMutableDictionary *_aioEnterActionReqReadyCount;
    QQLockArray *_hotChatADArray;
    QQLockArray *_gameRecentMsges;
    NSArray *_joinHotChatList;
    NSDictionary *_hotChatCodeDic;
    unsigned long long _gameJsonSvrVerison;
    NSString *_tickerJSStr;
    NSString *_brickJSStr;
    NSString *_sceneJSStr;
}

+ (_Bool)isExistSwithConfigFile;
+ (_Bool)gameDpcState;
+ (_Bool)apolloDpcState;
+ (id)sharedInstance;
+ (id)keyLastItemsIdForShowingNewActionJSONTips;
+ (id)keyHasClickedGameTabForPanelTabRedDot:(int)arg1 timeVer:(long long)arg2;
+ (id)keyHasClickedActionTabForPanelTabRedDot:(int)arg1;
+ (id)keyActionIDStrListForNewActionTip;
+ (id)keyForHasShownGameRecommendTipWithGameID:(int)arg1;
+ (id)kHasShownSlaveTabTips;
+ (id)kLastTSTriggerCheckActionJSONUpdate;
+ (id)getScriptPathWithActionType:(int)arg1;
+ (id)aioEnterActionPathWithUin:(long long)arg1;
+ (id)drawerActionPushMsgPath;
+ (id)spriteGameHotChatRecentMsgPath;
+ (id)spriteGameHotChatADPath;
+ (id)spriteGamePathWithId:(id)arg1;
+ (id)spriteUserDocPath;
+ (id)groupWhiteFaceJSPath;
+ (id)spriteResInfoPath;
+ (id)spriteFavoriteActionPath;
+ (id)spriteStepCountConfigPath;
+ (id)spriteAVFluidControlConfigPath:(int)arg1;
+ (id)spriteWeatherConfigPath;
+ (id)spriteSwitchConfigPath;
+ (id)spriteFunctionPreviewRightImgPath;
+ (id)spriteFunctionPreviewImgPath;
+ (id)spritePayedByGoldActionPath;
+ (id)spriteSlaveActionPath;
+ (id)spriteTodayFreeActionPath;
+ (id)spriteCollectedActionPath;
+ (id)spriteJoinedActionPath;
+ (id)spriteActionStatusInfoPath;
+ (id)scriptPath;
+ (id)gameJsonPath;
+ (id)actionJsonPath;
+ (id)spriteResPathFromBundleCopy;
+ (id)spriteBundleRootPath;
+ (id)spriteDrawerBtnAnimPath;
+ (id)spriteBoxAnimPathWithURL:(id)arg1;
+ (id)spriteGameZipPath;
+ (id)spriteGamePath;
+ (id)spriteRootDocPath;
+ (id)spriteRootPath;
@property(retain, nonatomic) NSString *sceneJSStr; // @synthesize sceneJSStr=_sceneJSStr;
@property(retain, nonatomic) NSString *brickJSStr; // @synthesize brickJSStr=_brickJSStr;
@property(retain, nonatomic) NSString *tickerJSStr; // @synthesize tickerJSStr=_tickerJSStr;
@property(nonatomic) _Bool needCheckGameJson; // @synthesize needCheckGameJson=_needCheckGameJson;
@property(nonatomic) unsigned long long gameJsonSvrVerison; // @synthesize gameJsonSvrVerison=_gameJsonSvrVerison;
@property(nonatomic) unsigned int gameTabJsonIntervalTS; // @synthesize gameTabJsonIntervalTS=_gameTabJsonIntervalTS;
@property(retain, nonatomic) NSDictionary *hotChatCodeDic; // @synthesize hotChatCodeDic=_hotChatCodeDic;
@property(nonatomic) int checkGameListStatus; // @synthesize checkGameListStatus=_checkGameListStatus;
@property(nonatomic) _Bool spriteViewHidden; // @synthesize spriteViewHidden=_spriteViewHidden;
@property(retain, nonatomic) NSArray *joinHotChatList; // @synthesize joinHotChatList=_joinHotChatList;
@property(nonatomic) int resFinishTag; // @synthesize resFinishTag=_resFinishTag;
@property(retain, nonatomic) QQLockArray *gameRecentMsges; // @synthesize gameRecentMsges=_gameRecentMsges;
@property(retain, nonatomic) QQLockArray *hotChatADArray; // @synthesize hotChatADArray=_hotChatADArray;
@property(retain, nonatomic) NSMutableDictionary *aioEnterActionReqReadyCount; // @synthesize aioEnterActionReqReadyCount=_aioEnterActionReqReadyCount;
@property(nonatomic) unsigned int actionJsonVerInFile; // @synthesize actionJsonVerInFile=_actionJsonVerInFile;
@property(nonatomic) unsigned int gameJsonVerInFile; // @synthesize gameJsonVerInFile=_gameJsonVerInFile;
@property(nonatomic) _Bool needViewProgress; // @synthesize needViewProgress=_needViewProgress;
@property(nonatomic) unsigned long long appStartTime; // @synthesize appStartTime=_appStartTime;
@property(nonatomic) _Bool isAppBackground; // @synthesize isAppBackground=_isAppBackground;
@property(retain, nonatomic) NSMutableArray *loginRequest; // @synthesize loginRequest;
@property(retain, nonatomic) NSDictionary *switchConfig; // @synthesize switchConfig;
@property _Bool showActSwitch; // @synthesize showActSwitch;
@property(nonatomic) _Bool grayscaleSwitch; // @synthesize grayscaleSwitch;
@property(nonatomic) NSMutableDictionary *offlineModels; // @synthesize offlineModels;
@property _Bool isLoadingOfflineRes; // @synthesize isLoadingOfflineRes;
@property(nonatomic) _Bool isGamePanelNew; // @synthesize isGamePanelNew;
@property(nonatomic) _Bool isActionJsonNew; // @synthesize isActionJsonNew;
@property(nonatomic) id <SpriteDataManagerGamePanelDelegate> gamePanelDelegate; // @synthesize gamePanelDelegate;
@property(nonatomic) id <SpriteDataManagerDelegate> delegate; // @synthesize delegate;
@property(nonatomic) _Bool needPet;
- (id)loadCmShowBaseScriptOfSceneStr;
- (id)loadCmShowBaseScriptOfBrickStr;
- (id)loadCmShowBaseScriptOfTickerStr;
- (void)loadCmShowBaseJSScript;
- (void)loadSpriteViewHiddenValue;
- (void)deleteSpriteMsgPushModelDrawerActionWorkForFriend;
- (id)pushModelWorkActionForFriendFromCache;
- (void)dealWithDrawerActionWorkForFriend:(id)arg1;
- (void)removeRedBagMsgWithSessionId:(unsigned long long)arg1 aioType:(int)arg2;
- (id)redBagMsgWithSessionId:(unsigned long long)arg1 aioType:(int)arg2;
- (void)writeRedBagMsg:(id)arg1;
- (void)dealWithRedBagPushMsgWith:(id)arg1;
- (void)saveUin:(id)arg1 byOpenId:(id)arg2 gameId:(int)arg3;
- (id)openIDWithUin:(id)arg1 gameId:(int)arg2;
- (id)uinWithOpenId:(id)arg1 gameId:(int)arg2;
- (id)keyForUinFromOpenId:(id)arg1 gameId:(int)arg2;
- (void)loginUpdate;
- (int)getSpriteActionTypeWithActionId:(unsigned int)arg1;
- (_Bool)isSlaveActionWithActionId:(unsigned int)arg1;
- (unsigned long long)querySliceWith:(int)arg1;
- (_Bool)isDisableSendMsgWithGameMode:(int)arg1;
- (id)getGameIdByHotChatUid:(id)arg1;
- (id)getGameNameByGameId:(int)arg1;
- (id)getGameModelByGameId:(int)arg1;
- (_Bool)isExistResInLocal:(id)arg1;
- (id)readVersionJsonWithGameID:(id)arg1;
- (id)getBubbleShowContent:(id)arg1;
- (void)stopVibrate;
- (void)vibrate;
- (void)playVibrate:(id)arg1;
- (void)writeFavoriteActionList;
- (void)loadFavoriteActionList:(CDUnknownBlockType)arg1;
- (_Bool)needLoadFavorite;
- (id)deleteFavoriteActionWithArray:(id)arg1;
- (_Bool)deleteFavoriteActionWithID:(unsigned int)arg1 seq:(unsigned long long)arg2;
- (_Bool)addFavoriteActionWithDic:(id)arg1;
- (_Bool)hasActionInLocalFavoriteWithActionID:(unsigned int)arg1 textType:(int)arg2 actionText:(id)arg3 diySoundId:(unsigned int)arg4 diySoundBeginTs:(long long)arg5;
- (id)getFavoriteReverseList;
- (id)getFavoriteActionList;
- (void)onApplicationDidBecomeActive:(id)arg1;
- (void)onApplicationDidEnterBackground:(id)arg1;
- (_Bool)canCreateGLView;
- (id)getAllImagesFromPath:(id)arg1;
- (void)loadDiyActionSound:(id)arg1 savePath:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)downloadDiyActionSoundWithUrl:(id)arg1 savePath:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)loadAnimFrames:(id)arg1 savePath:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)downloadAnimFramesWithUrl:(id)arg1 savePath:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)sendGetDrawerBoxData:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)sendOpenBoxReqOwenerUin:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)sendThankZanToUin:(long long)arg1 chestId:(int)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)checkDrawerBoxStateWithToUin:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (int)currentServTime;
- (void)saveSpriteBoxCheckInfo:(id)arg1 toUin:(id)arg2 needShow:(_Bool)arg3 animResURL:(id)arg4 boxType:(int)arg5;
- (void)removeLocalSpriteBoxCheckInfoWithUin:(id)arg1 toUin:(id)arg2;
- (void)checkLocalSpriteBoxShowInfoWithMyUin:(id)arg1 toUin:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)formatOpenBoxExternParam:(id)arg1 hadBox:(_Bool)arg2;
- (void)setShowSwitchInfo:(_Bool)arg1;
- (void)getActShowSwitch;
- (void)startGetActShowSwitchTimer;
- (void)initShowActSwitch;
- (_Bool)isInWhiteList;
- (long long)getEnterPointShowTypeWithKey:(id)arg1;
- (id)readSwitchConfig;
- (id)readStepCountConfig;
- (id)readAVFluidControlConfig:(int)arg1;
- (id)readWeatherConfig;
- (void)syncSaveConfigWithString:(id)arg1 Path:(id)arg2;
- (void)saveConfigWithDic:(id)arg1 Path:(id)arg2;
- (void)saveSwitchConfigWithDic:(id)arg1;
- (void)changeAccount;
- (void)initGrayscaleSwitch;
- (void)updateDataAfterSetSwitch;
- (void)setGrayscaleSwitch:(_Bool)arg1 uin:(id)arg2;
- (void)callSelectorAndPostNotifi;
- (void)postShowIconNotifiAndCallDelegate:(id)arg1 isSucceed:(_Bool)arg2;
- (void)postActionPlayResNotifi:(id)arg1 isSucceed:(_Bool)arg2;
- (void)checkOfflineIconResDowned:(_Bool)arg1;
- (id)readOfflineIconResWithName:(id)arg1 obj:(id)arg2 Sel:(SEL)arg3 downloadNoExist:(_Bool)arg4;
- (id)readConfigUrlWithKeyStr:(id)arg1;
- (id)gameCenterURL;
- (_Bool)isSupportGame;
- (_Bool)isSupportAI;
- (_Bool)isSupportDiscussGroup;
- (_Bool)isSupportShowDrawer;
- (_Bool)isSupportFriendCard;
- (_Bool)isSupportShowMyCard;
- (_Bool)isSupportShowPanel;
- (id)gamePanelFirstShowTipUrl;
- (id)gamePanelTipStringWithKey:(id)arg1;
- (_Bool)isSupportAutoOpenBox;
- (_Bool)isSupportSlaveAction;
- (_Bool)isSupportCmGame;
- (_Bool)isSupportCmShow;
- (void)onApolloStateChange:(id)arg1;
- (void)onAccountLogout:(id)arg1;
- (void)checkObtainedActionsExistInJSON;
- (void)saveVersionWithModel:(id)arg1;
- (void)saveScriptJsonVersion:(unsigned int)arg1;
- (void)saveGameJsonVersion:(unsigned int)arg1;
- (void)saveActionJsonVersion:(unsigned int)arg1;
- (void)updatePlayResWithModels:(id)arg1;
- (void)checkRoleVersionUpdate;
- (void)checkScriptVersionUpdate;
- (void)checkGameJsonVersionUpdate;
- (void)checkActionJsonVersionUpdate;
- (void)spriteDressUpdateNotice:(id)arg1;
- (void)onRequestContentUpdateSuccess;
- (void)requestContentUpdate;
- (void)requestContentUpdate6;
- (void)sendRoleUpdateReq;
- (void)sendScriptUpdateReq;
- (void)sendGameJsonUpdateReq;
- (void)sendJsonUpDateReq;
- (void)didFinishNetSSoTask:(id)arg1;
- (void)didFinishNetTaskInMyTread:(id)arg1;
- (void)didFinishNetTask:(id)arg1;
- (id)taskDidStart:(id)arg1;
- (void)updateUserGoldCoinWithCompletion:(CDUnknownBlockType)arg1;
- (void)sendReqBuyActionById:(int)arg1 callback:(CDUnknownBlockType)arg2;
- (void)sendGetWeatherInfoWithLatitude:(double)arg1 Longitude:(double)arg2 Callback:(CDUnknownBlockType)arg3;
- (void)sendGetUserMotto:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)sendFetchUserActList;
- (void)updataActionList;
- (void)sendFetchUserInfoReqWithType:(int)arg1 toUin:(id)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)sendGetAvatarReq:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)sendThumbUpReqWith:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)sendFetchPermissionsReq:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)sendPet:(unsigned long long)arg1 status:(unsigned long long)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)sendFetchPermissionsReq:(id)arg1;
- (void)sendSwitchCmdReq;
- (void)loadEmojiActionPlayResWithId:(long long)arg1 aioType:(int)arg2 type:(int)arg3 callBack:(CDUnknownBlockType)arg4;
- (void)loadPlayResWithId:(long long)arg1 type:(int)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)preCallBack:(id)arg1;
- (void)preCallBack:(CDUnknownBlockType)arg1 model:(id)arg2;
- (void)loadRoleBubbleResWithRoleId:(long long)arg1 bubelId:(long long)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)loadRoleDefaultActionPlayResWithType:(id)arg1 roleId:(long long)arg2 callBack:(CDUnknownBlockType)arg3 needLoadData:(_Bool)arg4;
- (void)loadRoleDefaultActionPlayResWithId:(long long)arg1 roleId:(long long)arg2 Type:(id)arg3 callBack:(CDUnknownBlockType)arg4;
- (void)loadRoleDefaultActionPlayResWithId:(long long)arg1 roleId:(long long)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)loadEmojiActionPlayResPathDictWithId:(long long)arg1 aioType:(int)arg2 actionType:(int)arg3 callBack:(CDUnknownBlockType)arg4;
- (void)loadDrawerActionPlayResDictWithID:(long long)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)loadActionPlayResPathDictWithId:(long long)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)loadRolePlayResPathDictWithId:(long long)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)loadDressPlayResPathDictWithId:(long long)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)loadNetGameResWithModel:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)loadNetPlayResInMainThreadWithModel:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)loadNetPlayResWithModel:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)loadNetPlayAndShowIconResWithModel:(id)arg1;
- (void)loadNetPlayResWithModel:(id)arg1;
- (void)loadNetPreviewWithModel:(id)arg1;
- (void)loadFunPreviewResWithPath:(id)arg1 downUrl:(id)arg2;
- (void)loadFunPrevieRightImg;
- (void)loadFunPrevieImg;
- (void)loadAllFunPrevieRes;
- (void)loadNetTextActionIconWithModel:(id)arg1;
- (void)loadNetShowIconWithModel:(id)arg1;
- (void)updateUserSpriteGameJsonWithVersion:(long long)arg1;
- (void)updateUserSpriteActionJsonWithVersion:(long long)arg1;
- (void)loadNetSpriteScript;
- (void)loadNetSpriteGameJson;
- (void)loadNetSpriteActionJson;
- (id)sendSSOWithCmd:(id)arg1 reqData:(id)arg2 context:(id)arg3 del:(id)arg4 finishHd:(SEL)arg5;
- (id)downloadWithUrl:(id)arg1 savePath:(id)arg2 model:(id)arg3 del:(id)arg4 viewDelegate:(id)arg5 type:(int)arg6 subType:(int)arg7 progressSel:(SEL)arg8;
- (id)downloadWithUrl:(id)arg1 savePath:(id)arg2 model:(id)arg3 type:(int)arg4 subType:(int)arg5 progressBlock:(CDUnknownBlockType)arg6;
- (id)downloadWithUrl:(id)arg1 savePath:(id)arg2 model:(id)arg3 del:(id)arg4 type:(int)arg5 subType:(int)arg6;
- (void)loadPlayAndShowIconResWithModelArray:(id)arg1;
- (void)loadPlayAndShowIconResWithModel:(id)arg1;
- (void)checkNativeRoleAndDressRess:(id)arg1;
- (void)writeActList;
- (_Bool)isActivityActionValidate:(id)arg1;
- (_Bool)isLimitFreeAction:(id)arg1;
- (_Bool)isObtainedAction:(id)arg1;
- (_Bool)isObtainedSlaveAction:(id)arg1;
- (_Bool)isPayedByGold:(id)arg1;
- (_Bool)isJoinActiveAction:(id)arg1;
- (_Bool)isCollectionAction:(id)arg1;
- (void)removeJoinedActionWithId:(int)arg1;
- (void)addJoinedAction:(id)arg1;
- (id)getActionModelWithId:(id)arg1;
- (id)getActUrlWithActionId:(id)arg1;
- (id)getCurPanelActionModels;
- (id)getNativeConfigData;
- (void)saveHotChatCodeDicWithGamePkgModel:(id)arg1;
- (id)parsePanelGameJsonWithOrgString:(id)arg1 version:(unsigned int *)arg2;
- (id)parsePanelActionJsonWithOrgString:(id)arg1 version:(unsigned int *)arg2;
- (void)preDownloadWhenInit;
- (void)dealWithSpriteResLoadFinishTag:(int)arg1;
- (void)loadNativeSpriteData;
- (void)loadAllDressIds;
- (id)loadAllRoleIds;
- (void)moveBundleSpriteResToNativeFolder;
- (id)getBlockDelegate;
- (void)didRecievedMsgFromExtern:(CDStruct_7895f40e)arg1;
- (_Bool)isExistDownloadGameId:(id)arg1;
- (_Bool)isExistSsoReqTask:(int)arg1 cmd:(id)arg2;
- (id)init;
- (id)filterUnvCardAction:(id)arg1;
- (int)vCardActionID;
- (id)aioEnterActionModelArrayWithLocalData:(long long)arg1;
- (id)aioEnterActionModelArrayWithJSONArray:(id)arg1 uin:(long long)arg2;
- (void)saveActionListWithJSONArray:(id)arg1;
- (void)sendReqGetAioEnterActionList:(id)arg1;
- (void)saveAioEnterActionReqSuccessTs:(int)arg1 withUin:(long long)arg2;
- (id)keyForShowingAioEnterActionGuideBubble:(unsigned int)arg1;
- (id)keyForLastTsReqAioEnterActionSuccessWithUin:(long long)arg1;
- (void)addOneReadyCountOfUin:(long long)arg1;
- (_Bool)canReqDataOfUin:(long long)arg1;
- (void)resetAioEnterActionLocalDataForUin:(long long)arg1;
- (_Bool)p_dealWithGameRes:(id)arg1;
- (_Bool)dealWithGameRes:(id)arg1 needAsync:(_Bool)arg2 callBack:(CDUnknownBlockType)arg3;
- (int)redPointTypeForGameId:(int)arg1;
- (void)delGameAfterCheck:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)addGameAfterCheck:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)sendSaveUpdateGameList;
- (void)loadPreloadGameResWithItemModel:(id)arg1;
- (void)sendGetHotChatUserNumInfoWithGameId:(int)arg1 theme:(id)arg2 opType:(int)arg3 callback:(CDUnknownBlockType)arg4;
- (void)exitHotChatGameRoomWithGroupCode:(id)arg1;
- (_Bool)hasGameRecentMsges;
- (unsigned long long)lastGamtRecentMsgesTime;
- (id)getHotChatFolderRecentSummaryByGroupCode:(id)arg1;
- (unsigned int)getHotChatGameIdByUid:(id)arg1;
- (id)getGameRecentMsgWithHotChatUid:(id)arg1;
- (id)convertToRecentMsg:(id)arg1;
- (id)combineRecentMsgList:(id)arg1;
- (void)updateCmShowGameRecentSummaryWith:(id)arg1;
- (void)removeGameRecentMsgByRecentSummary:(id)arg1;
- (void)removeGameRecentMsg:(id)arg1;
- (void)addGameRecentMsg:(id)arg1 cmShowGameId:(unsigned int)arg2;
- (void)addGameRecentMsg:(id)arg1;
- (void)asynSaveHotChatRecentMsg;
- (void)asynLoadHotChatRecentMsg;
- (void)asynLoadHotChatADArray;
- (void)asynSaveHotChatADArray;
- (id)p_filterExpireSpriteGameHotChatADModel:(id)arg1;
- (void)setHotChatADReadedWithGameId:(unsigned long long)arg1 gameTheme:(id)arg2 showLevel:(unsigned long long)arg3;
- (void)setHotChatADReadedWithShowLevel:(unsigned long long)arg1;
- (id)currentHotChatADModelWithGameId:(unsigned long long)arg1 gameTheme:(id)arg2 showLevel:(unsigned long long)arg3;
- (id)p_currentHotChatADModelWithActId:(id)arg1;
- (id)currentADModelShowInHotChatFolderWith:(unsigned long long)arg1;
- (void)p_refreshADArrayWithModel:(id)arg1;
- (_Bool)checkNeedUpdateHotChatADModel:(id)arg1;
- (void)dealWithSpriteGameHotChatADPushMsgWith:(id)arg1;
- (id)keyForRankChangeTopGameNumber;
- (id)keyForGameScoreWithUin:(id)arg1 gameId:(id)arg2;
- (id)keyForRankChangeFlagWithFriendUin:(id)arg1 gameId:(id)arg2;
- (id)p_getGameScoreDictWithUin:(id)arg1 gameArray:(id)arg2;
- (void)p_updateGameScoreByGameList:(id)arg1;
- (void)p_updateGamePanelByFriendUin:(id)arg1 changeList:(id)arg2;
- (void)p_getRankChangeWithGameScoreArray:(id)arg1 uin:(unsigned long long)arg2;
- (void)getRankChangeWithSessionUin:(id)arg1 gameArray:(id)arg2 isC2C:(_Bool)arg3;
- (id)p_getCreatDateWithFileName:(id)arg1 rootPath:(id)arg2;
- (void)p_deleteGameResWithSize:(long long)arg1;
- (long long)p_getLocalGameResSize;
- (id)p_getPreloadGameReqWithGameInfoArr:(id)arg1;
- (void)preloadGame;
- (void)setGameListFrontWithGameId:(int)arg1;
- (id)p_refreshRecommendGameList:(id)arg1;
- (void)checkGameJsonVersionByInitGameListReq;
- (void)initGameList;
- (_Bool)hasGame:(id)arg1;
- (id)getLocalGameList;
- (void)writeGameList:(id)arg1;
- (id)getLocalGameListTS;
- (void)delLocalGameListTS;
- (void)updateLocalGameListTS:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

