//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QQMainProject/QQViewController.h>

#import <QQMainProject/ARQRManagerDelegate-Protocol.h>
#import <QQMainProject/OCREngineDelegate-Protocol.h>
#import <QQMainProject/OCRUploadResultCallback-Protocol.h>

@class ARLoadingView, MQQRCodeReaderViewController, NSDate, NSString, OCREngine, UIButton, UIImage, UIImageView, UILabel, UIView;
@protocol MQOCRDelegate;

@interface QQOCRRecgViewController : QQViewController <OCREngineDelegate, OCRUploadResultCallback, ARQRManagerDelegate>
{
    UILabel *_tipsLabel;
    ARLoadingView *_arCloudLoadingView;
    UIView *_arCloudLoadingViewMask;
    UILabel *_arCloudLoadingLabel;
    UIButton *_closeBtn;
    _Bool _isQRScan;
    _Bool _isClosed;
    _Bool _needQRCodeRecg;
    _Bool _onlyForQR;
    _Bool _isOCREnginePrepared;
    _Bool _pauseOCR;
    _Bool _startOCR;
    _Bool _canGoBack;
    _Bool _rotated;
    float _imageWidth;
    UIImage *_originImage;
    MQQRCodeReaderViewController *_qrVC;
    NSString *_loadingTips;
    id <MQOCRDelegate> _webPluginDelegate;
    UIImageView *_recgImageView;
    OCREngine *_ocrEngine;
    long long _orientation;
    unsigned long long _fromWhere;
    NSDate *_cloudUploadStartTime;
    NSDate *_loadingTime;
    UIImage *_rotatedImage;
}

+ (_Bool)isQZoneSupportOCR;
@property(retain, nonatomic) UIImage *rotatedImage; // @synthesize rotatedImage=_rotatedImage;
@property(nonatomic) float imageWidth; // @synthesize imageWidth=_imageWidth;
@property(retain, nonatomic) NSDate *loadingTime; // @synthesize loadingTime=_loadingTime;
@property(retain, nonatomic) NSDate *cloudUploadStartTime; // @synthesize cloudUploadStartTime=_cloudUploadStartTime;
@property(nonatomic) unsigned long long fromWhere; // @synthesize fromWhere=_fromWhere;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) _Bool rotated; // @synthesize rotated=_rotated;
@property(nonatomic) _Bool canGoBack; // @synthesize canGoBack=_canGoBack;
@property(nonatomic) _Bool startOCR; // @synthesize startOCR=_startOCR;
@property(nonatomic) _Bool pauseOCR; // @synthesize pauseOCR=_pauseOCR;
@property(nonatomic) _Bool isOCREnginePrepared; // @synthesize isOCREnginePrepared=_isOCREnginePrepared;
@property(retain, nonatomic) OCREngine *ocrEngine; // @synthesize ocrEngine=_ocrEngine;
@property(retain, nonatomic) UIImageView *recgImageView; // @synthesize recgImageView=_recgImageView;
@property(nonatomic) __weak id <MQOCRDelegate> webPluginDelegate; // @synthesize webPluginDelegate=_webPluginDelegate;
@property(retain, nonatomic) NSString *loadingTips; // @synthesize loadingTips=_loadingTips;
@property(nonatomic) __weak MQQRCodeReaderViewController *qrVC; // @synthesize qrVC=_qrVC;
@property(nonatomic) _Bool onlyForQR; // @synthesize onlyForQR=_onlyForQR;
@property(nonatomic) _Bool needQRCodeRecg; // @synthesize needQRCodeRecg=_needQRCodeRecg;
@property(retain, nonatomic) UIImage *originImage; // @synthesize originImage=_originImage;
- (void).cxx_destruct;
- (void)hideARCloudLoadingView;
- (void)clearARCloudLoadingView;
- (void)showARCloudLoadingView;
- (void)close:(id)arg1;
- (void)initLoadViewMask;
- (id)normalizedImage:(id)arg1;
- (id)compressImage:(id)arg1;
- (id)resizeImage:(id)arg1 toSize:(struct CGSize)arg2;
- (id)contentTypeForImageData:(id)arg1;
- (_Bool)isSupportRightDragToGoBack;
- (void)cloudProcessorResultCallBack:(id)arg1;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)initParameter;
- (void)resetImage:(id)arg1 from:(unsigned long long)arg2;
- (id)initWithImage:(id)arg1 from:(unsigned long long)arg2 orientation:(long long)arg3;
- (id)initWithImageFilePath:(id)arg1 from:(unsigned long long)arg2;
- (id)initWithImage:(id)arg1 from:(unsigned long long)arg2;
- (void)getDcpConfig;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

