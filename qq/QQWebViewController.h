//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QQMainProject/QQViewController.h>

#import <QQMainProject/ActionItemDelegate-Protocol.h>
#import <QQMainProject/ActionSheetDataDelegate-Protocol.h>
#import <QQMainProject/CmShowGameViewDelegate-Protocol.h>
#import <QQMainProject/PhotoEditDelegate-Protocol.h>
#import <QQMainProject/QQAudioSessionManagerDelegate-Protocol.h>
#import <QQMainProject/QQBannerTipViewDelegate-Protocol.h>
#import <QQMainProject/QQFriendSelectedViewControllerDelegate-Protocol.h>
#import <QQMainProject/QQNavigationControllerEventDelegate-Protocol.h>
#import <QQMainProject/QQPAPhotoEditDelegate-Protocol.h>
#import <QQMainProject/QQPublicAccountScreenShotDelegate-Protocol.h>
#import <QQMainProject/QQUrlJumpHelperDelegate-Protocol.h>
#import <QQMainProject/QQWebShareDelegate-Protocol.h>
#import <QQMainProject/QQWebViewControllerDelegate-Protocol.h>
#import <QQMainProject/QQWebViewSwitchToAioMsgListDelegate-Protocol.h>
#import <QQMainProject/QQWebviewExecuteJSDelegate-Protocol.h>
#import <QQMainProject/SonicSessionDelegate-Protocol.h>
#import <QQMainProject/TrackerEventProtocal-Protocol.h>
#import <QQMainProject/UIActionSheetDelegate-Protocol.h>
#import <QQMainProject/UIGestureRecognizerDelegate-Protocol.h>
#import <QQMainProject/UIScrollViewDelegate-Protocol.h>
#import <QQMainProject/UIWebViewDelegate-Protocol.h>
#import <QQMainProject/UserSummaryNavBarItemDelagate-Protocol.h>
#import <QQMainProject/WKNavigationDelegate-Protocol.h>
#import <QQMainProject/WKScriptMessageHandler-Protocol.h>
#import <QQMainProject/WKUIDelegate-Protocol.h>

@class ActionSheetAdditionalItems, JSContext, NSArray, NSData, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSString, NSTimer, NSURL, NSURLConnection, NSURLRequest, ODRefreshControl, QQActivityViewController, QQAlertView, QQGroupLinkShareController, QQMessageModel, QQPluginInfo, QQPublicAccountLikeCommentBoxView, QQPublicAccountScreenShotMgr, QQShareWebRichMsgLogic, QQURLRichMsgData, QQUrlJumpHelper, QQWebPageListenerWrapper, QQWebShareActionSheet, QQWebView, QQWebViewControllerPayHelper, QQWebViewDynamicFontSetting, QQWebViewGroupHelper, QQWebViewLBSLogic, QQWebViewOfflineUpdateInfo, QQWebViewPluginScheduler, QQWebViewSwitchToAioMsgListMgr, UIActivityIndicatorView, UIButton, UIColor, UIImage, UIImageView, UILabel, UINavigationController, UISwipeGestureRecognizer, UITapGestureRecognizer, UIView, UIWebView, UserSummaryNavigationBar, WebAdsorbDragButton;
@protocol QQRichStateJsHelperDelegate, QQWebViewControllerDelegate;

@interface QQWebViewController : QQViewController <CmShowGameViewDelegate, QQPublicAccountScreenShotDelegate, PhotoEditDelegate, ActionItemDelegate, QQPAPhotoEditDelegate, QQFriendSelectedViewControllerDelegate, QQWebShareDelegate, UserSummaryNavBarItemDelagate, QQWebViewSwitchToAioMsgListDelegate, SonicSessionDelegate, TrackerEventProtocal, QQAudioSessionManagerDelegate, WKScriptMessageHandler, WKUIDelegate, UIGestureRecognizerDelegate, UIWebViewDelegate, WKNavigationDelegate, QQUrlJumpHelperDelegate, QQWebviewExecuteJSDelegate, UIActionSheetDelegate, ActionSheetDataDelegate, QQNavigationControllerEventDelegate, QQBannerTipViewDelegate, UIScrollViewDelegate, QQWebViewControllerDelegate>
{
    NSString *_lastLeftBtnTitle;
    NSString *_originalLeftBtnTitle;
    NSTimer *_timerForLoading;
    QQMessageModel *_msgModel;
    NSURLConnection *_iconLoaderConnection;
    NSMutableData *_iconData;
    QQUrlJumpHelper *_urljumpHelper;
    double _appearTimestamp;
    NSString *asyncSelectFriendCallback;
    _Bool _isVisible;
    long long _lRequestSTWEBTag;
    long long _lRequestSTWEBPtloginTag;
    QQGroupLinkShareController *_groupLinkShareController;
    _Bool _isEnterHscreen;
    _Bool _isDisableCloseWebButton;
    _Bool _isCloseCurrentWeb;
    NSDictionary *_jsUserInfo;
    NSError *_loadingError;
    long long _webCoreType;
    long long _qbWebCoreType;
    QQWebView *_webView;
    long long _style;
    int _stackStyle;
    NSString *_origOpenURLStr;
    NSString *_url;
    NSString *_requestURLStr;
    NSURL *_referenceURL;
    NSString *_relatedAccountUin;
    int _relatedAccountType;
    NSString *_relatedAccountMsgId;
    unsigned char _isFinishOrFail;
    NSURLRequest *_currentURLRequest;
    unsigned int _shareAppID;
    UIImage *_shareAppIcon;
    QQPluginInfo *_pluginInfo;
    NSString *_pluginID;
    _Bool _noResetTitle;
    _Bool _backoff;
    _Bool _isSupportOrientations;
    _Bool _isLockLandscapeOrientations;
    _Bool _disableSwipeBack;
    NSString *_webShareScrName;
    _Bool _isForbiddenLongPressForPic;
    _Bool _dontUseGlobalFontScale;
    _Bool _dontGoBackWhenClickLeftButton;
    _Bool _openLinkInNewWebView;
    NSString *_rightButtonCallback;
    NSString *_secRightButtonCallback;
    NSString *_failLoadingURL;
    int _source;
    int _pbArticleSource;
    NSMutableDictionary *_behaviorOptions;
    NSString *_leftButtonStr;
    _Bool _isQRCodeResultMode;
    NSString *_qrcodeOrgStr;
    _Bool _isGameCenter;
    NSString *_httpMethod;
    NSString *_postParam;
    id <QQRichStateJsHelperDelegate> _jsDelegate;
    _Bool _recomposingState;
    _Bool _needDragRefresh;
    _Bool _supportRightDragToGoBack;
    int _webviewType;
    _Bool _customLeftButton;
    NSString *_leftButtonCustomCallback;
    NSString *_currentBid;
    QQWebViewOfflineUpdateInfo *_offlineUpdateInfo;
    UIActivityIndicatorView *_loadingView;
    QQWebViewControllerPayHelper *_applePayHelper;
    NSDictionary *_sharedData;
    NSURL *_currentURL;
    NSString *_closeNotifyCallbackFunName;
    UIImageView *_fullScreenActionMenuView;
    WebAdsorbDragButton *_adsorbButton;
    UIView *_fullScreenMask;
    NSMutableArray *_fullMenuItemArray;
    ODRefreshControl *_refreshControl;
    UIView *_tapGestureViewRefresh;
    UILabel *_sourceHostLabel;
    NSString *_originURL;
    _Bool _notAppendSid;
    NSString *_reportSourceInfo;
    UIButton *_closeWebButton;
    _Bool _hasFinishLoading;
    NSDate *_beginOpenWebviewTime;
    NSDate *_startLoadingURLTime;
    double _startLoadingTime;
    double _finishLoadTime;
    long long _loadNum;
    NSMutableDictionary *_stepTimesDic;
    long long _enterSource;
    QQWebViewPluginScheduler *_pluginScheduler;
    struct CGRect _webviewRect;
    _Bool _showSystemNaviWhenPop;
    _Bool _showSystemNaviWhenDisappear;
    _Bool _isCurrentUseQBWebView;
    long long _qbwebDNSTime;
    float _navigationBarAlpha;
    UserSummaryNavigationBar *_customNavBar;
    NSString *_subTitle;
    UIButton *_groupAppRightButton;
    QQActivityViewController *_groupAppActionSheet;
    NSDictionary *_groupAppInfo;
    _Bool _groupAppLoading;
    double _beginGroupAppTime;
    _Bool _isNaviBarHiddend;
    UIView *_fontSizeScreenMask;
    UIView *_pbCommentBoxScreenMask;
    NSString *_navBarInitParameter;
    QQWebShareActionSheet *_actionSheet;
    QQWebShareActionSheet *_shareSheet;
    QQWebViewDynamicFontSetting *_fontSizeController;
    QQPublicAccountLikeCommentBoxView *_pbCommentBoxView;
    UITapGestureRecognizer *_fontSizetapGesture;
    UISwipeGestureRecognizer *_fontSizeswipeGestureDownUp;
    UISwipeGestureRecognizer *_fontSizeswipeGestureRightLeft;
    UITapGestureRecognizer *_commentBoxtapGesture;
    QQPublicAccountScreenShotMgr *_publicAccountScreenshotMgr;
    NSTimer *_publicAccountScreenShotTimer;
    NSData *_paShareImageData;
    UIImage *_publicAccountImage;
    NSString *_publicAccountImagePath;
    UIView *_subBoradView;
    UIView *_subMaskingView;
    NSString *_arkString;
    NSString *_originShareUrl;
    _Bool _lastStatusBarHidden;
    _Bool _curVisible;
    _Bool _bReportStay;
    _Bool _didCallViewWillDisappear;
    _Bool _bReportBeforLoad;
    _Bool _bReportLoadFinish;
    _Bool _bReportShouldStartLoad;
    _Bool _bReportShouldStartLoadErr;
    int _memoryWarningTipsCount;
    int _startloadFinishCount;
    int _loadFinishCount;
    _Bool _shadeDone;
    double _popGuestureRespondWidth;
    struct CGRect _popGuestureRespondRect;
    NSString *_origOpenURLStrNoCredentials;
    UINavigationController *_navi;
    QQAlertView *_alertView;
    double _memoryConsumptionInMBBeforeLoading;
    long long logIndex;
    _Bool _HaveReportPAArticle;
    int _jsSetRightForwardButton;
    _Bool _isNeedShowRightButtonRedPoint;
    _Bool _isUsingWKPool;
    _Bool _isQzoneGame;
    NSString *_recomposePrefix;
    _Bool _skipRedirect;
    _Bool _timeout;
    _Bool _firstRequest;
    NSMutableArray *_queryCurrentLocationRequest;
    QQShareWebRichMsgLogic *_sendRichMsgLogic;
    NSURL *_webpagSetShareURL;
    QQWebViewLBSLogic *_lbsLogic;
    QQWebViewGroupHelper *_groupHelper;
    NSMutableArray *_openTimeArray;
    NSURL *_preCalcURL;
    QQURLRichMsgData *_webPagShareData;
    NSString *_webPageShareListener;
    NSString *_webPageListenerQQ;
    NSString *_webPageListenerQZne;
    NSString *_webPageListenerWX;
    NSString *_webPageListenerWxZone;
    _Bool _hideRightButtonRedPointAfterClick;
    _Bool _isScreenshotEnable;
    _Bool _isShareToWeiboEnable;
    _Bool _isShareToDianDiannable;
    _Bool _enableCopyShortLink;
    _Bool _isKeyBoardShow;
    _Bool _isGamePlaying;
    _Bool _isAutoPlayVideo;
    _Bool _isTransparentAndPassthroughTouchEvent;
    _Bool _isNavTransparent;
    _Bool _shouldTransparentNavigationBarChangeWhenScroll;
    _Bool _isGroupOpenApp;
    _Bool _isNotAnimatedPushIn;
    _Bool _shouldShowNotReachableAlert;
    _Bool _isAutoSetNavBgColor;
    _Bool _isShade;
    _Bool _needSetCategory;
    _Bool _isGroupVideoGrayH5Req;
    _Bool _appInBackground;
    _Bool _hideLeftArrow;
    _Bool _isNeedTopAdapterView;
    _Bool _isNeedBottomAdapterView;
    _Bool _isTopAdapterColorSetInDocumentFinish;
    _Bool _isBottomAdapterColorSetInDocumentFinish;
    _Bool _hasSendRequest;
    _Bool _isUrlCheckUnSafed;
    _Bool _QZoneRedirectWarningFlag;
    NSMutableArray *bottombarHideArray;
    NSMutableArray *bottombarShowArray;
    id <QQWebViewControllerDelegate> _webViewDelegate;
    UINavigationController *_tempNavgationController;
    NSString *_currentMainDocumentURL;
    NSString *_beforeRedirectionURL;
    NSMutableDictionary *_redirectLog;
    NSString *_screenshotTitle;
    NSString *_screenshotUrl;
    NSArray *_activityViewTitles;
    NSString *_shareToWeiboTitle;
    ActionSheetAdditionalItems *_paActionSheetAdditionalItems;
    NSMutableDictionary *_offlineProgressInfo;
    UIImageView *_qbImageView;
    UILabel *_qbTipsLabel;
    long long _originDeviceOrientation;
    double _startLoadViewTime;
    double _firstStartLoadingTime;
    double _gotPt4tokenTime;
    NSNumber *_webviewMarginBottom;
    double _customedMarginTop;
    long long _dividePosition;
    double _beforeDivideAlpha;
    double _afterDivideAlpha;
    NSString *_beforeTitle;
    NSString *_afterTitle;
    NSString *_reuseWebIdentifier;
    unsigned long long _subStyle;
    UIImageView *_iPhoneX_topAdapterView;
    UIImageView *_iPhoneX_bottomAdapterView;
    UIImageView *_iPhoneX_bottomAdapterNightModeView;
    UIColor *_iPhoneX_topAdapterColor;
    UIColor *_iPhoneX_bottomAdapterColor;
    UIView *_switchToAioButtonView;
    UIButton *_switchToAioButton;
    QQWebViewSwitchToAioMsgListMgr *_switchToAioMgr;
    UIImageView *_dotView;
    UIImageView *_fullDotView;
    UIWebView *_web;
    NSString *_whiteScreenDetectUrl;
    NSDate *_clickStamp;
    NSDate *_firstCallBackStamp;
    NSMutableDictionary *_selfHoldDict;
    NSMutableDictionary *_urlCheckSeqs;
    NSMutableDictionary *_urlCheckHistory;
    long long _urlCheckHasRedirectCount;
    JSContext *_context;
}

+ (int)openWebviewCount:(int)arg1;
+ (id)createHisDic;
+ (void)saveJumpHisUrl:(id)arg1;
+ (void)saveOpenHisUrl:(id)arg1;
+ (id)webcoreHisLog;
+ (id)webcoreCalcReportURL:(id)arg1;
+ (long long)webviewTypeForURL:(id)arg1;
+ (long long)ParserUrl:(id)arg1;
+ (id)webViewPreferencesPath;
+ (void)storeUserAgent:(id)arg1;
+ (id)readStoreUserAgent;
+ (void)setCustomUserAgentWithBase64:(id)arg1;
+ (id)getCustomUserAgentWithBase64;
+ (id)defaultUserAgent;
+ (id)newWith:(id)arg1 forStyle:(long long)arg2;
+ (_Bool)isOfficalAccountMessagePage:(id)arg1;
+ (_Bool)host:(id)arg1 matchesRegex:(id)arg2;
+ (_Bool)host:(id)arg1 matchesPattern:(id)arg2;
+ (_Bool)host:(id)arg1 matchesAnyInPatterns:(id)arg2;
+ (void)popToWebViewControllerFrom:(id)arg1 withOnCloseReturnData:(id)arg2;
+ (id)currentWebViewControllerInRootViewController:(id)arg1 includingPresentedViewController:(_Bool)arg2;
+ (id)currentWebViewControllerInRootViewController:(id)arg1;
+ (id)webViewControllersInViewStack;
+ (id)closestWebViewController:(id)arg1;
+ (id)currentWebViewController;
+ (id)rootTabBarController;
+ (_Bool)reportWebInfoWithOpName:(id)arg1 opEnter:(id)arg2 opResult:(id)arg3 reserve1:(id)arg4 reserve2:(id)arg5 reserve3:(id)arg6 reserve4:(id)arg7;
+ (int)numberOfCreatedWebViewControllerAfterLaunch;
+ (void)setCurrentLoadingURL:(id)arg1;
+ (id)getCurrentLoadingURL;
+ (_Bool)reportQBWebInfoWithBizId:(id)arg1 actionName:(id)arg2 timeUse:(id)arg3 reportUrl:(id)arg4 webCoreType:(long long)arg5 isPreDNS:(long long)arg6 dnsTime:(id)arg7 reportSource:(id)arg8 network:(id)arg9 resev1:(long long)arg10 resev2:(long long)arg11 resev3:(id)arg12 resev4:(id)arg13;
+ (id)userGuideWebVCWithContactsBindType:(long long)arg1 andBindPhone:(id)arg2 registPhone:(id)arg3;
+ (id)userGuideWebVCWithContactsBindType:(long long)arg1;
@property(nonatomic) _Bool QZoneRedirectWarningFlag; // @synthesize QZoneRedirectWarningFlag=_QZoneRedirectWarningFlag;
@property(copy, nonatomic, getter=getRecomposePrefix) NSString *recomposePrefix; // @synthesize recomposePrefix=_recomposePrefix;
@property(retain, nonatomic) JSContext *context; // @synthesize context=_context;
@property(nonatomic) _Bool isUrlCheckUnSafed; // @synthesize isUrlCheckUnSafed=_isUrlCheckUnSafed;
@property(nonatomic) long long urlCheckHasRedirectCount; // @synthesize urlCheckHasRedirectCount=_urlCheckHasRedirectCount;
@property(retain, nonatomic) NSMutableDictionary *urlCheckHistory; // @synthesize urlCheckHistory=_urlCheckHistory;
@property(retain, nonatomic) NSMutableDictionary *urlCheckSeqs; // @synthesize urlCheckSeqs=_urlCheckSeqs;
@property(retain, nonatomic) NSMutableDictionary *selfHoldDict; // @synthesize selfHoldDict=_selfHoldDict;
@property(retain, nonatomic) NSDate *firstCallBackStamp; // @synthesize firstCallBackStamp=_firstCallBackStamp;
@property(retain, nonatomic) NSDate *clickStamp; // @synthesize clickStamp=_clickStamp;
@property(retain, nonatomic) NSString *whiteScreenDetectUrl; // @synthesize whiteScreenDetectUrl=_whiteScreenDetectUrl;
@property(nonatomic) _Bool hasSendRequest; // @synthesize hasSendRequest=_hasSendRequest;
@property(retain, nonatomic) UIWebView *web; // @synthesize web=_web;
@property(retain, nonatomic) UIImageView *fullDotView; // @synthesize fullDotView=_fullDotView;
@property(retain, nonatomic) UIImageView *dotView; // @synthesize dotView=_dotView;
@property(retain, nonatomic) QQWebViewSwitchToAioMsgListMgr *switchToAioMgr; // @synthesize switchToAioMgr=_switchToAioMgr;
@property(retain, nonatomic) UIButton *switchToAioButton; // @synthesize switchToAioButton=_switchToAioButton;
@property(retain, nonatomic) UIView *switchToAioButtonView; // @synthesize switchToAioButtonView=_switchToAioButtonView;
@property(nonatomic) _Bool isBottomAdapterColorSetInDocumentFinish; // @synthesize isBottomAdapterColorSetInDocumentFinish=_isBottomAdapterColorSetInDocumentFinish;
@property(nonatomic) _Bool isTopAdapterColorSetInDocumentFinish; // @synthesize isTopAdapterColorSetInDocumentFinish=_isTopAdapterColorSetInDocumentFinish;
@property(retain, nonatomic) UIColor *iPhoneX_bottomAdapterColor; // @synthesize iPhoneX_bottomAdapterColor=_iPhoneX_bottomAdapterColor;
@property(retain, nonatomic) UIColor *iPhoneX_topAdapterColor; // @synthesize iPhoneX_topAdapterColor=_iPhoneX_topAdapterColor;
@property(retain, nonatomic) UIImageView *iPhoneX_bottomAdapterNightModeView; // @synthesize iPhoneX_bottomAdapterNightModeView=_iPhoneX_bottomAdapterNightModeView;
@property(retain, nonatomic) UIImageView *iPhoneX_bottomAdapterView; // @synthesize iPhoneX_bottomAdapterView=_iPhoneX_bottomAdapterView;
@property(retain, nonatomic) UIImageView *iPhoneX_topAdapterView; // @synthesize iPhoneX_topAdapterView=_iPhoneX_topAdapterView;
@property(nonatomic) _Bool isNeedBottomAdapterView; // @synthesize isNeedBottomAdapterView=_isNeedBottomAdapterView;
@property(nonatomic) _Bool isNeedTopAdapterView; // @synthesize isNeedTopAdapterView=_isNeedTopAdapterView;
@property(nonatomic) unsigned long long subStyle; // @synthesize subStyle=_subStyle;
@property(nonatomic) _Bool hideLeftArrow; // @synthesize hideLeftArrow=_hideLeftArrow;
@property(retain, nonatomic) NSString *reuseWebIdentifier; // @synthesize reuseWebIdentifier=_reuseWebIdentifier;
@property(nonatomic) _Bool appInBackground; // @synthesize appInBackground=_appInBackground;
@property(nonatomic) _Bool isGroupVideoGrayH5Req; // @synthesize isGroupVideoGrayH5Req=_isGroupVideoGrayH5Req;
@property(nonatomic) _Bool needSetCategory; // @synthesize needSetCategory=_needSetCategory;
@property(retain, nonatomic) NSString *afterTitle; // @synthesize afterTitle=_afterTitle;
@property(retain, nonatomic) NSString *beforeTitle; // @synthesize beforeTitle=_beforeTitle;
@property(nonatomic) _Bool isShade; // @synthesize isShade=_isShade;
@property(nonatomic) double afterDivideAlpha; // @synthesize afterDivideAlpha=_afterDivideAlpha;
@property(nonatomic) double beforeDivideAlpha; // @synthesize beforeDivideAlpha=_beforeDivideAlpha;
@property(nonatomic) long long dividePosition; // @synthesize dividePosition=_dividePosition;
@property(nonatomic) _Bool isAutoSetNavBgColor; // @synthesize isAutoSetNavBgColor=_isAutoSetNavBgColor;
@property(nonatomic) _Bool shouldShowNotReachableAlert; // @synthesize shouldShowNotReachableAlert=_shouldShowNotReachableAlert;
@property(nonatomic) double customedMarginTop; // @synthesize customedMarginTop=_customedMarginTop;
@property(retain, nonatomic) QQMessageModel *msgModel; // @synthesize msgModel=_msgModel;
@property(nonatomic) _Bool isNotAnimatedPushIn; // @synthesize isNotAnimatedPushIn=_isNotAnimatedPushIn;
@property(retain, nonatomic) NSDictionary *groupAppInfo; // @synthesize groupAppInfo=_groupAppInfo;
@property(nonatomic) _Bool isGroupOpenApp; // @synthesize isGroupOpenApp=_isGroupOpenApp;
@property(retain, nonatomic) UserSummaryNavigationBar *customNavBar; // @synthesize customNavBar=_customNavBar;
@property(nonatomic) _Bool shouldTransparentNavigationBarChangeWhenScroll; // @synthesize shouldTransparentNavigationBarChangeWhenScroll=_shouldTransparentNavigationBarChangeWhenScroll;
@property(retain, nonatomic) NSNumber *webviewMarginBottom; // @synthesize webviewMarginBottom=_webviewMarginBottom;
@property(readonly, nonatomic) _Bool isNavTransparent; // @synthesize isNavTransparent=_isNavTransparent;
@property(nonatomic) _Bool isTransparentAndPassthroughTouchEvent; // @synthesize isTransparentAndPassthroughTouchEvent=_isTransparentAndPassthroughTouchEvent;
@property(nonatomic) double gotPt4tokenTime; // @synthesize gotPt4tokenTime=_gotPt4tokenTime;
@property(nonatomic) double firstStartLoadingTime; // @synthesize firstStartLoadingTime=_firstStartLoadingTime;
@property(nonatomic) double startLoadViewTime; // @synthesize startLoadViewTime=_startLoadViewTime;
@property(nonatomic) _Bool isAutoPlayVideo; // @synthesize isAutoPlayVideo=_isAutoPlayVideo;
@property(nonatomic) long long originDeviceOrientation; // @synthesize originDeviceOrientation=_originDeviceOrientation;
@property(retain, nonatomic) UILabel *qbTipsLabel; // @synthesize qbTipsLabel=_qbTipsLabel;
@property(retain, nonatomic) UIImageView *qbImageView; // @synthesize qbImageView=_qbImageView;
@property(retain) NSMutableDictionary *offlineProgressInfo; // @synthesize offlineProgressInfo=_offlineProgressInfo;
@property(nonatomic) _Bool isGamePlaying; // @synthesize isGamePlaying=_isGamePlaying;
@property(nonatomic) long long qbwebDNSTime; // @synthesize qbwebDNSTime=_qbwebDNSTime;
@property(nonatomic) _Bool isCurrentUseQBWebView; // @synthesize isCurrentUseQBWebView=_isCurrentUseQBWebView;
@property(nonatomic) _Bool isKeyBoardShow; // @synthesize isKeyBoardShow=_isKeyBoardShow;
@property(retain, nonatomic) ActionSheetAdditionalItems *paActionSheetAdditionalItems; // @synthesize paActionSheetAdditionalItems=_paActionSheetAdditionalItems;
@property(nonatomic) _Bool enableCopyShortLink; // @synthesize enableCopyShortLink=_enableCopyShortLink;
@property(nonatomic) _Bool isShareToDianDiannable; // @synthesize isShareToDianDiannable=_isShareToDianDiannable;
@property(retain, nonatomic) NSString *shareToWeiboTitle; // @synthesize shareToWeiboTitle=_shareToWeiboTitle;
@property(nonatomic) _Bool isShareToWeiboEnable; // @synthesize isShareToWeiboEnable=_isShareToWeiboEnable;
@property(retain, nonatomic) NSArray *activityViewTitles; // @synthesize activityViewTitles=_activityViewTitles;
@property(retain, nonatomic) NSString *screenshotUrl; // @synthesize screenshotUrl=_screenshotUrl;
@property(retain, nonatomic) NSString *screenshotTitle; // @synthesize screenshotTitle=_screenshotTitle;
@property(nonatomic) _Bool isScreenshotEnable; // @synthesize isScreenshotEnable=_isScreenshotEnable;
@property(retain, nonatomic) QQWebShareActionSheet *shareSheet; // @synthesize shareSheet=_shareSheet;
@property(retain, nonatomic) QQWebShareActionSheet *actionSheet; // @synthesize actionSheet=_actionSheet;
@property(retain, nonatomic) NSString *navBarInitParameter; // @synthesize navBarInitParameter=_navBarInitParameter;
@property(retain, nonatomic) NSMutableDictionary *redirectLog; // @synthesize redirectLog=_redirectLog;
@property(copy, nonatomic) NSString *beforeRedirectionURL; // @synthesize beforeRedirectionURL=_beforeRedirectionURL;
@property(copy, nonatomic) NSString *currentMainDocumentURL; // @synthesize currentMainDocumentURL=_currentMainDocumentURL;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) UINavigationController *tempNavgationController; // @synthesize tempNavgationController=_tempNavgationController;
@property(nonatomic) _Bool hideRightButtonRedPointAfterClick; // @synthesize hideRightButtonRedPointAfterClick=_hideRightButtonRedPointAfterClick;
@property(nonatomic) id <QQWebViewControllerDelegate> webViewDelegate; // @synthesize webViewDelegate=_webViewDelegate;
@property(retain, nonatomic) NSString *originShareUrl; // @synthesize originShareUrl=_originShareUrl;
@property(retain, nonatomic) NSString *arkString; // @synthesize arkString=_arkString;
@property(retain, nonatomic) NSMutableArray *bottombarShowArray; // @synthesize bottombarShowArray;
@property(retain, nonatomic) NSMutableArray *bottombarHideArray; // @synthesize bottombarHideArray;
- (void).cxx_destruct;
- (void)reportToCompass2216Action:(id)arg1;
- (id)qbWebReportInfoWithUrl:(id)arg1;
- (id)getWebBrowserView;
- (void)logDNSResultForPublicAccount:(id)arg1;
- (_Bool)shouldWSD;
- (void)whiteScreenDetect;
- (void)refreshSourceHostLabel;
- (void)showDebugVC:(id)arg1;
- (void)showDebugLogView:(id)arg1;
- (void)webViewTap:(id)arg1;
- (void)toggleDebugEnvirment:(id)arg1;
- (void)refreshDebugLog;
- (void)addDebugUI;
- (void)bannerTipViewDidClick:(id)arg1;
- (void)dismissOfflineInfoBanner;
- (void)showOfflineInfoBanner_Warning:(id)arg1;
- (void)showOfflineInfoBanner_Completion:(id)arg1;
- (void)showOfflineInfoBanner_Confirmation:(id)arg1;
- (void)showOfflineInfoBanner_Progress:(id)arg1;
- (void)offlineUpdateHandler:(id)arg1;
- (void)processOfflineProgressInfo:(id)arg1 forceLayout:(_Bool)arg2;
- (void)resetWebviewCookie;
- (void)abortAccessCurrentPage;
- (void)onWebViewDidStartLoad;
- (void)onStartLoadWithRequest:(id)arg1;
- (void)ExecuteJS:(id)arg1 withParam:(id)arg2;
- (_Bool)requestFetchSTWEB;
- (void)onQQRequestSigSTWEBFailNote:(id)arg1;
- (void)onQQRequestSigSTWEBSuccNote:(id)arg1;
- (void)onTimeout;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)onCloseQZoneRedirectWarningNotice:(id)arg1;
- (void)showQZoneRedirectWarningNotice;
- (void)on3RDShareNotify:(id)arg1;
- (void)report;
- (void)reportWebActionSheetClick:(id)arg1 andType:(id)arg2;
- (id)getQQActivityViewTitles;
- (_Bool)needUseOrigOpenURLShare;
- (id)getDataForShareItem:(id)arg1 onThisItem:(int)arg2;
- (id)getDataForConfig:(id)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)onClickScreenShotShare;
- (unsigned long long)supportedInterfaceOrientations;
- (void)setSwitchToAioButtonColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setSwitchAioButtonHidden:(_Bool)arg1;
- (void)setActionButtonHidden:(_Bool)arg1;
- (void)clearSecRightButton;
- (void)createDoubleImageRightButton:(id)arg1 firAction:(SEL)arg2 firVoiceStr:(id)arg3 secIconName:(id)arg4 secAction:(SEL)arg5 secVoiceStr:(id)arg6;
- (void)createImageRightButton:(id)arg1 action:(SEL)arg2;
- (void)createTextRightButton:(id)arg1 action:(SEL)arg2;
- (void)setCurrentBarState;
- (void)getWebScreenShot:(id)arg1 videoLayer:(id)arg2 tileLayer:(id)arg3 resultDict:(id)arg4;
- (id)getScreenShotWithSize:(struct CGSize)arg1;
- (void)showActionMenu;
- (void)showActionWithTag:(unsigned long long)arg1 andHidden:(_Bool)arg2;
- (void)preLoadOfflineLoadErrorPage;
- (void)dealLoadError:(id)arg1 Error:(id)arg2;
- (void)showErrorPageWithIcon:(int)arg1 title:(id)arg2 action:(id)arg3 reason:(id)arg4 refresh:(_Bool)arg5;
- (void)showCrashErrorPage;
- (void)showDefaultNotReachablePage;
- (void)showDefaultLoadFailPageWithError:(id)arg1;
- (id)getDNSServers;
- (void)logNetworkInfoWhenFailLoadingURL:(id)arg1 withError:(id)arg2;
- (double)loadTime;
- (void)updateTitle;
- (void)showRightButtonRedPoint:(_Bool)arg1;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)addReadInJoyWebShareGuide;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)reportJavaScriptError:(id)arg1;
- (void)reportMemoryConsumption;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)checkURLQQMusicOperation:(id)arg1;
- (_Bool)checkURLHashChangedJSCallback:(id)arg1;
- (_Bool)innerWebView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)isUrlHashChangeOnly:(id)arg1 toUrl:(id)arg2;
- (_Bool)shareWithReadInJoy;
- (void)reportPAArticleEnterInfo:(id)arg1;
- (void)checkResetWebPageListenerAfterLoading;
- (void)reportJDurl:(id)arg1;
- (void)reportShouldStartLoad:(id)arg1 opName:(id)arg2;
- (_Bool)isValidFailLoadURL:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)didRecieveScriptMessage:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_injectMusicCheckJavaScriptToWebView:(id)arg1;
- (void)changeNavigationBarTitle:(id)arg1 leftButtonTitle:(id)arg2;
- (void)handleRichStateJsCall:(id)arg1;
- (void)setRightDragToGoBackEnable:(_Bool)arg1 popGuestureRespondRect:(struct CGRect)arg2;
- (void)setRightDragToGoBackEnable:(_Bool)arg1 popGuestureRespondWidth:(double)arg2;
- (struct CGRect)regionForSupportingRightDragToGoBack;
- (_Bool)isSupportRightDragToGoBack;
- (_Bool)isRecomposeLink:(id)arg1;
- (_Bool)canOpenShareAppOrAppStore;
- (_Bool)canOpenShareApp;
- (_Bool)shouldOpenURLInNewWebView:(id)arg1;
- (_Bool)hasBottomNavigationToolbar;
- (_Bool)isAppStoreLink:(id)arg1;
- (_Bool)inWhiteList:(id)arg1;
- (id)changeWebSetShareURL:(id)arg1;
- (int)minimumMemoryRequired;
- (id)getPageURL;
- (id)getCurrentURL;
- (void)appStateChanged:(id)arg1;
- (void)addBackgroundStateAPIForWebView:(id)arg1;
- (id)dictionaryForWebviewRunningEnvironment;
- (_Bool)isClosedWebViewList:(id)arg1;
- (void)loadNewGuideView;
- (void)menuViewHide:(id)arg1;
- (void)showFullScreenActionViewWithAnimations;
- (void)showFullScreenActionView:(id)arg1;
- (void)activeApp;
- (void)setHeightOfWebview:(double)arg1 withDuration:(double)arg2;
- (void)keyboardWillhide:(id)arg1;
- (void)keyboardWillshow:(id)arg1;
- (void)reloadUrl:(id)arg1;
- (void)reload;
- (void)enablePayByQQProductIdArray:(id)arg1;
- (void)delayEndRefreshing:(_Bool)arg1 failTips:(id)arg2;
- (void)restoreDragRefreshView:(_Bool)arg1;
- (void)tapViewEndRefresh;
- (void)dragViewDidBeginRefresh;
@property(nonatomic) _Bool needDragRefresh; // @dynamic needDragRefresh;
- (void)gameCenterStatCheckWithRequest:(id)arg1 navigationType:(long long)arg2;
- (void)openURLInNewWebView:(id)arg1;
- (void)stopPageLoading;
- (void)stopLoading;
- (void)startLoading;
- (void)onLoadTimeOut;
- (void)enterFacePackManageViewController:(id)arg1;
- (void)enterMyFontViewController:(id)arg1;
- (void)closeButtonDismissModalViewControllerForQutu:(id)arg1;
- (void)closeButtonDismissModalViewController:(id)arg1;
- (void)rightCloseBtnClicked2:(id)arg1;
- (void)rightCloseBtnClicked:(id)arg1;
- (void)switchToAioWithTitle:(id)arg1 iconName:(id)arg2;
- (void)switchToAioBtnClicked:(id)arg1;
- (void)tryCreateSwitchToAioMgrWithUrl:(id)arg1 isHideSwitchButton:(_Bool)arg2;
- (void)secRightButtonClick:(id)arg1;
- (void)rigthButtonClick:(id)arg1;
- (void)loadStatusBar;
- (void)reSetLeftButtonTitle;
- (_Bool)isPAAlbumMode;
- (struct CGRect)getBottomBarRect:(long long)arg1;
- (struct CGSize)qbSizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2 forString:(id)arg3;
- (struct CGRect)getQBTipsLabelRect:(long long)arg1;
- (struct CGRect)getQBImageViewRect:(long long)arg1;
- (struct CGRect)getSourceHostLabelRect:(long long)arg1;
- (struct CGRect)getLoadingViewRect:(long long)arg1;
@property(nonatomic) struct CGRect webviewRect; // @dynamic webviewRect;
- (void)resetWebViewFrameForTransparentTitleBar;
- (struct CGRect)webViewRectByStyleAndOrientation;
- (double)titleHeight:(long long)arg1;
- (void)onAppendParamFinished:(id)arg1 error:(id)arg2;
- (id)addQRcodeTag:(id)arg1;
- (id)encodeRecomposeUrl:(id)arg1;
- (id)GetTargetUinTag;
- (id)GetCurrentUinTag;
- (id)getSourceTag:(id)arg1;
- (void)handleNetworkChange:(id)arg1;
- (void)registerNotifications;
- (void)trySetNavStyleFromConfig;
- (_Bool)verifyHostByMatchConfig:(id)arg1 configHost:(id)arg2;
- (void)initializeWebViewBehaviourByURLParameter:(id)arg1;
- (long long)styleFromURL:(id)arg1 defaultStyle:(long long)arg2;
- (void)setScaleForDocumentElement:(double)arg1;
- (void)removeGestureRecognizerOfWebFontSizeView;
- (void)setGestureRecognizerOfWebFontSizeView;
- (_Bool)isTopViewOfWebViewCtr;
- (void)onShowWebFontSizeView:(id)arg1;
- (void)onFontSizeChange:(id)arg1;
- (void)updateFontSizeIfNeed:(double)arg1;
- (void)updateIsSupportOrientations;
- (void)lockOrientation:(long long)arg1;
- (void)hideFloatingShare:(_Bool)arg1;
@property(nonatomic) _Bool isSupportOrientations; // @dynamic isSupportOrientations;
- (_Bool)isRightButtonForword;
- (void)handleEnterForeground;
- (void)handleEnterBackground:(id)arg1;
- (void)handleResignActive;
- (void)handleBecomeActive:(id)arg1;
- (id)getURLParam:(id)arg1 paramName:(id)arg2;
- (void)onPluginIconUpdate:(id)arg1;
- (void)downloadPluginAppIcon:(id)arg1;
- (void)resetJsOnCloseCallbackWhenLoadingRequest:(id)arg1;
- (_Bool)webPageProcessCloseEvent;
- (void)onLeftButtonCustom;
- (void)goBack;
- (void)dismissWebViewController:(_Bool)arg1;
- (void)closeButtonClick:(id)arg1;
- (void)showWebviewColseButton:(id)arg1;
- (void)showCloseButton:(_Bool)arg1;
- (void)leftButtonClick:(id)arg1;
- (void)loadRequestImp:(id)arg1;
- (void)loadRequest:(id)arg1;
- (_Bool)checkWhiteList_addUinPt4tokenCookieIfNeed:(id)arg1;
- (_Bool)checkWhiteList_addUinA2CookieIfNeed:(id)arg1;
- (_Bool)checkWhiteList_addUinPSKeyCookieIfNeed:(id)arg1;
- (void)checkWhiteList_addUinSKeyAndVKeyCookieIfNeed:(id)arg1;
- (_Bool)buildRequestUrl;
- (void)rightBtnClicked;
- (void)addAppInstallParam;
- (void)setCustomUserAgentAndCustomURLCache;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)setNavigationBarColorWithContentOffsetIfNeed;
- (void)setTitleBarHide:(_Bool)arg1 withDuration:(double)arg2;
- (void)resetStatusBar;
- (void)setNavigationBarColor:(id)arg1;
- (void)setNavigationTitleView:(id)arg1;
- (void)setNavigationBarAlpha:(float)arg1 animateDuration:(double)arg2;
- (void)modifyNavigationState;
- (void)handleNavBarItemClick:(_Bool)arg1;
- (void)navigationBarHandle;
- (void)setNavigationBarButtonColor:(id)arg1 animated:(_Bool)arg2;
- (void)setNavigationBarTintColor:(id)arg1 animated:(_Bool)arg2;
- (void)setNavigationBarBackgroundColor:(id)arg1 animated:(_Bool)arg2;
- (void)setNavigationBarBackgroundColor:(id)arg1 animated:(_Bool)arg2 duration:(double)arg3;
- (void)setNavigationBarTitleColor:(id)arg1 animated:(_Bool)arg2;
- (_Bool)isSupportFullScreenLayout;
- (void)configNavBarFromUrl;
- (void)dealloc;
- (void)reportMemoryWarningForEntry:(int)arg1;
- (void)didReceiveMemoryWarning;
- (void)qqNavigationControllerDidPopViewController;
- (_Bool)isOrphan:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (id)trackerEventInfo;
- (void)moviePlayerWillExitFullScreen:(id)arg1;
- (void)moviePlayerDidEnterFullScreen:(id)arg1;
- (void)viewDidLoad;
- (void)loadPABottomBarView;
- (void)setDefaultThemeNavigationBar;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setWebBrowerViewTouchEnable:(_Bool)arg1;
- (void)fullMemuMoreButtonClick:(id)arg1;
- (void)loadFullScreenActionMenu;
- (void)layoutAdapterViewsForiPhoneX;
- (void)setupBottomNightModeView;
- (void)createAdapterViewsWithSubStyle;
- (void)setupAdapterView;
- (void)setupAdapterViewColor;
- (void)setupBottomAdapterColor;
- (void)setupTopAdapterColor;
- (void)setupAdapterColorAfterCreateView;
- (void)initAdapterViewColorAndActionWithUrl;
- (void)setDefaultTopAdatperStatusBarStyle;
- (_Bool)isNavTransparentStyle;
- (void)viewSafeAreaInsetsDidChange;
@property(readonly, nonatomic) _Bool shouldUseAsyncJSCallBack;
- (void)loadQQWebView;
- (void)decideWebViewCoreType;
- (Class)getQQWebViewClass;
- (void)session:(id)arg1 requireWebViewReload:(id)arg2;
- (void)sessionWillRequest:(id)arg1;
- (void)didRecieveUnSafeRedirect:(id)arg1;
- (id)getOpenWebViewFromInfo;
- (void)sendUrlSafeCheckForRequest:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)addParams:(id)arg1 toURL:(id)arg2;
- (id)addKanDianSkinParamsIfNeed:(id)arg1;
- (void)loadView;
- (void)webViewPbCommentTap:(id)arg1;
- (void)hideCommentBoxScreenMask;
- (void)removeGestureTopbCommentBoxScreenMask;
- (void)addGestureTopbCommentBoxScreenMask;
- (void)reloadInputView;
- (void)reloadFontSizeView;
- (void)reloadOnlyShareSheet;
- (id)getActionSheetAdditionalItems;
- (void)reloadActionSheet;
- (_Bool)checkWVParam:(id)arg1 flag:(long long)arg2;
- (long long)webViewConfigFlag2FromQueryComponents:(id)arg1;
- (long long)webViewConfigFlagFromQueryComponents:(id)arg1;
- (long long)webViewConfigFlag2FromUrl:(id)arg1;
- (long long)webViewConfigFlagFromUrl:(id)arg1;
- (_Bool)isCloseCurrentWebview;
- (void)setWebviewFitToPage:(id)arg1 url:(id)arg2;
- (void)setHomeBtnImage:(id)arg1;
- (void)updateRightButton;
- (void)leftButtonFrame:(id)arg1;
- (void)setLeftButtonTitle:(id)arg1;
- (void)leftButtonCloseAction;
- (void)resetlayout;
- (void)resetlayout:(long long)arg1;
- (void)createDefaultImageRightButton;
- (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2;
- (void)viewDidLayoutSubviews;
- (unsigned long long)viewID;
- (int)viewTag;
- (void)regestNotifycation;
@property(retain, nonatomic) QQWebViewGroupHelper *groupHelper; // @dynamic groupHelper;
@property(retain, nonatomic) QQWebViewLBSLogic *lbsLogic; // @dynamic lbsLogic;
@property(retain, nonatomic) QQShareWebRichMsgLogic *sendRichMsgLogic; // @dynamic sendRichMsgLogic;
@property(retain, nonatomic) QQWebViewControllerPayHelper *applePayHelper; // @dynamic applePayHelper;
@property(retain, nonatomic) NSMutableArray *queryCurrentLocationRequest; // @dynamic queryCurrentLocationRequest;
- (void)webcorelog;
- (id)initWithJsOptions:(id)arg1;
- (void)setSwipeBackEnabled:(_Bool)arg1;
- (id)colorForNavButton;
- (id)navTextColor;
- (void)setBottomBarBehavior:(_Bool)arg1 withGoBack:(_Bool)arg2;
- (void)setBottomBarBehavior:(_Bool)arg1;
- (void)setWebPageBackgroundColor:(unsigned long long)arg1;
- (void)setNavBottomLineState:(_Bool)arg1;
- (void)setNavButtonColor:(id)arg1;
- (void)setNavButtonColorWithHex:(unsigned long long)arg1;
- (void)updateButton:(id)arg1 color:(id)arg2;
- (void)setNavTextColor:(id)arg1;
- (void)setNavTextColorWithHex:(unsigned long long)arg1;
- (void)setNavBgColor:(id)arg1;
- (void)setNavBgColorWithHex:(unsigned long long)arg1;
- (void)setTransparentNavigationBarTitle:(id)arg1;
- (void)restoreNavigationBarCustomColor;
- (void)_changeStyleToTransparentIfNot;
- (void)setNavigationBarBackgroundStyle:(int)arg1 animated:(_Bool)arg2;
- (void)setNavigationBarTitleColor:(id)arg1;
- (void)setNavigationBarButtonColor:(id)arg1 forState:(unsigned long long)arg2 isLeftButton:(_Bool)arg3;
- (void)setTransparentNavigationBarColor:(id)arg1 animated:(_Bool)arg2 duration:(double)arg3;
- (void)setTransparentNavigationBarColor:(id)arg1 animated:(_Bool)arg2;
- (id)preLoadingLBS:(id)arg1;
- (void)prefetchPageShareInfo;
@property(nonatomic) unsigned int shareAppID; // @dynamic shareAppID;
- (void)orientationDidChanged:(id)arg1;
- (void)decideNavigationBarWithStyle;
- (_Bool)isCurrentDefaultTheme;
- (id)navDefaultStyleColor;
- (void)paramsInit;
- (long long)decideWebViewTypeByURL:(id)arg1;
- (void)decideWebViewTypeByOriginUrl;
- (void)setTitle:(id)arg1;
- (id)initWith:(id)arg1 andModel:(id)arg2 forStyle:(long long)arg3;
- (id)initWith:(id)arg1 forStyle:(long long)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)ptloginReplaceUrlString:(id)arg1 withToken:(id)arg2;
- (_Bool)checkPtlogin_ReplacUinIfNeed:(id)arg1;
- (void)requestFetchSTWEBPTLoginReplace;
- (void)onPTLoginReplaceSTWEBFailNote:(id)arg1;
- (void)onPTLoginReplaceSTWEBSuccNote:(id)arg1;
- (void)onPTLoginReplaceTimeout;
- (void)dismiss;
- (void)setLeftIconImage:(id)arg1;
- (void)cmshowGame_willDealloc;
- (void)p_doGameShareToQQ:(id)arg1 configuration:(id)arg2 info:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (id)vasPlugin;
- (id)rootDirectoryPath;
- (id)p_parseGameConfigurationFromQuery:(id)arg1;
- (id)p_parseGameModelFromQuery:(id)arg1;
- (id)p_errorWithMessage:(id)arg1 code:(long long)arg2;
- (void)postStartApolloGameNotification:(_Bool)arg1;
- (void)p_loadGameRes:(id)arg1 progressBlock:(CDUnknownBlockType)arg2;
- (void)p_updateGameRes:(id)arg1 gameModel:(id)arg2 gameConfig:(id)arg3 progressBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)p_startEnterGame:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)p_handleSSORetCode:(int)arg1 response:(id)arg2;
- (void)p_checkGameVersion:(id)arg1 gameConfig:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)p_checkUpdateGame:(id)arg1 config:(id)arg2 statusCheckCallback:(CDUnknownBlockType)arg3 progressBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)cmshow_JSChooseFriendPlayGame:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)startApolloGame:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (int)sessionType:(int)arg1;
- (void)onBaseChatViewControllerViewDidAppear:(id)arg1;
- (void)startAIOGame:(id)arg1 type:(int)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)p_friendSelectedBeingShowed;
- (void)p_clearAssociatedObjects;
- (id)getChatViewControllerWithUin:(id)arg1 friendType:(int)arg2;
- (void)cmshow_startAIOGame:(id)arg1 friendType:(int)arg2 callback:(CDUnknownBlockType)arg3;
- (void)cmshow_JSStartApolloGame:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)cmshow_JSUpdateApolloGame:(id)arg1 statusCheckCallback:(CDUnknownBlockType)arg2 progress:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)clearRightRedPoint;
- (void)actionShowAllPeopleList;
- (void)showRightRingBtn:(id)arg1;
@property(retain, nonatomic) NSString *scGroupCode;
- (id)getAdditionalItemActionDataWithType:(unsigned long long)arg1;
- (void)dialogSendBtnClick:(int)arg1 exInfo:(id)arg2;
- (void)setPaShareImageData:(id)arg1;
- (_Bool)isPublicAccountArticleEditFont:(id)arg1;
- (_Bool)isPAArticleStyle:(id)arg1;
- (_Bool)isPublicAccountBizURL:(id)arg1;
- (void)notifyPaUrlProtocolLoadingFinish:(id)arg1;
- (_Bool)isKanDianArticle;
- (void)reSizeReadJoyTips:(long long)arg1;
- (void)resetLeftButtonWithoutTheme;
- (_Bool)doesNeedChangeWhiteNavBar;
- (void)changeWhiteNavBar;
- (void)reloadReadJoyTips;
- (id)getCurrentViewController;
- (void)releasePublicItem;
- (long long)getCurrentPhotoIndex;
- (id)getAllPhotos;
- (id)getCurrentPhoto;
- (void)deleteCurrentPhoto;
- (id)getCurrentImage;
- (id)getCurrentImagePath;
- (int)getCurrentImageViewImageState;
- (void)forwardPICTOWeChat:(_Bool)arg1;
- (id)scaleToSize:(id)arg1 size:(struct CGSize)arg2;
- (id)CompressJPEGRepresentation:(id)arg1 max:(float)arg2 time:(int)arg3;
- (void)photoEditor:(id)arg1 provideEditingImage:(id)arg2 asset:(id)arg3 hasEdited:(_Bool)arg4;
- (void)photoEditor:(id)arg1 didFinishWithImage:(id)arg2 asset:(id)arg3 shouldOpenDoodle:(_Bool)arg4 hasEdited:(_Bool)arg5;
- (void)photoEditor:(id)arg1 willDisappear:(_Bool)arg2;
- (void)photoEditorDidCancel:(id)arg1;
- (void)doShareReportOfScreenShot:(id)arg1 withServiceType:(int)arg2;
- (void)quitScreenshotView:(_Bool)arg1;
- (void)paSharePicToWeChatCircleWithData:(id)arg1;
- (void)paShareWithWeChatCircle:(int)arg1;
- (void)paShareWithWeChatFriend:(int)arg1;
- (void)paShareWithQZone:(int)arg1;
- (id)urlEncode:(id)arg1;
- (void)paShareWithSinaWeibo:(int)arg1;
- (void)newAndSetPublicAccountImage:(struct CGRect)arg1 andUrl:(id)arg2;
- (void)getQRCodeImage:(int)arg1 withServiceType:(int)arg2 isToWeChatC2c:(_Bool)arg3;
- (void)dealWithShareOfScreenShot:(int)arg1 withServiceType:(int)arg2 isToWeChatC2c:(_Bool)arg3;
- (void)dealWithWeChatOfScreenShot:(_Bool)arg1;
- (void)dealWithShareZoneOfScreenShot:(int)arg1;
- (void)paShareWithFriend:(int)arg1;
- (void)onClickScreenShotImage;
- (void)onClickScreenShotClose;
- (void)onTimerScreenShotClose;
- (void)didTakeScreenshot:(id)arg1;
- (void)dealQQPublicAccountScreenShotMgrEx:(int)arg1;
- (void)newAndSetPublicAccountScreenshotMgr;
- (void)newQQPublicAccountScreenShotMgr:(int)arg1;
- (void)didTakeScreenshotEx;
- (void)didTakeScreenshot;
- (void)changeIsShareToDianDianEnable:(_Bool)arg1;
- (void)changeIsShareToWeiboEnable:(_Bool)arg1;
- (void)changeScreenShotEnable:(_Bool)arg1;
- (void)didTakeScreenshotOnWebActionEx;
- (void)didTakeScreenshotOnWebAction;
- (_Bool)checkScreenshotEnable;
- (id)getArticleId;
- (void)dismissFriendsSelectViewController;
- (void)shareToFriendSuccess;
- (void)shareToFriendCancelled;
- (_Bool)onRightButtonTap:(id)arg1;
- (void)onWeChatResp:(id)arg1;
- (void)redEnvelopeJavascript:(id)arg1 result:(int)arg2 msg:(id)arg3;
- (void)mqq_nav_addWebShareListener:(id)arg1;
- (void)mqq_nav_addShareWXTimeline:(id)arg1;
- (void)mqq_nav_addShareWXFriend:(id)arg1;
- (void)mqq_nav_addShareQZone:(id)arg1;
- (void)mqq_nav_addShareQQFriend:(id)arg1;
- (void)mqq_nav_shareHypertext:(id)arg1;
- (void)doReportPbShareOf0X8007F1F:(long long)arg1 shareData:(id)arg2 userInfo:(id)arg3;
- (id)mqq_nav_shareURLWebRichData:(id)arg1;
- (id)mqq_nav_openGroupAioOrProfile:(id)arg1;
- (void)onGetCreateGroupAuthority:(int)arg1 groupCode:(unsigned int)arg2 groupUin:(unsigned int)arg3 sign:(id)arg4 svrErrorCode:(int)arg5;
- (id)mqq_nav_createGroup:(id)arg1;
- (id)mqq_homework_clearData:(id)arg1;
- (id)mqq_homework_cancelUpload:(id)arg1;
- (id)mqq_homework_reUpload:(id)arg1;
- (id)mqq_homework_playVideo:(id)arg1;
- (id)mqq_homework_openUploadVideo:(id)arg1;
- (id)mqq_homework_openLocalFilePreview:(id)arg1;
- (id)mqq_homework_isLocalFileExists:(id)arg1;
- (id)mqq_homework_stopDownloadFile:(id)arg1;
- (id)mqq_homework_startDownloadFile:(id)arg1;
- (id)mqq_homework_ShowGroupFile:(id)arg1;
- (id)mqq_homework_StopOnlineRecord:(id)arg1;
- (id)mqq_homework_PlayOnlineRecord:(id)arg1;
- (id)mqq_homework_showImage:(id)arg1;
- (id)mqq_homework_openUploadImage:(id)arg1;
- (id)mqq_homework_endRecord:(id)arg1;
- (id)mqq_homework_startRecord:(id)arg1;
- (id)mqq_homework_stopPlayRecord:(id)arg1;
- (id)mqq_homework_playRecord:(id)arg1;
- (id)mqq_homework_openRecord:(id)arg1;
- (id)mqq_nav_shareWebRichMsg:(id)arg1;
- (id)mqq_nav_shareAudio:(id)arg1;
- (void)invokeJsBridgeCallback:(id)arg1 withJsonObject:(id)arg2;
- (void)invokeJsBridgeCallback:(id)arg1 argumentsFormat:(id)arg2 arguments:(char *)arg3;
- (void)invokeJsBridgeCallbackWithQuery:(id)arg1 argumentsFormat:(id)arg2;
- (void)invokeJsBridgeCallback:(id)arg1 argumentsFormat:(id)arg2;
- (void)onShareGroup:(id)arg1;
- (void)onShareAudio:(id)arg1;
- (id)mqq_data_setShareInfo:(id)arg1;
- (id)getImageType:(id)arg1;
- (void)gotoCityCoupon:(id)arg1;
- (id)mqq_coupon_goToCouponHomePage:(id)arg1;
- (id)mqq_nav_returnCouponHome:(id)arg1;
- (id)mqq_data_pbReport:(id)arg1;
- (id)mqq_data_getUrlImage:(id)arg1;
- (void)callbackResultCode:(id)arg1 callID:(id)arg2 result:(int)arg3;
- (void)callbackResult:(id)arg1 result:(int)arg2 paramsObj:(id)arg3;
- (id)mqq_data_getPageLoadStamp:(id)arg1;
- (id)getHostHasPremission:(id)arg1;
- (id)mqq_data_deleteWebviewBizData:(id)arg1;
- (id)mqq_data_readWebviewBizData:(id)arg1;
- (id)mqq_data_writeWebviewBizData:(id)arg1;
- (void)onJSRequestShowEditGroupProfile:(id)arg1;
- (void)onJSRequestShowGroupProfile:(id)arg1;
- (void)onJSRequestJoinGroup:(id)arg1;
- (void)onJSRequestSearchGroup:(id)arg1;
- (id)mqq_data_getOSLocation:(id)arg1;
- (void)handleGetLocationFailInner;
- (void)handleRequestTimeout:(id)arg1;
- (void)handleGetLocationFail:(id)arg1;
- (void)handleGetLocationSucc:(id)arg1;
- (void)handleStartUpdateLocation:(id)arg1;
- (void)notifyLbsEndUpdateLocation:(id)arg1;
- (void)startUpdateLocationWithAllowCacheTime:(long long)arg1;
- (void)removeLbsNotification;
- (void)doLocationJSCallbackMainThread:(int)arg1 coordinate:(struct CLLocationCoordinate2D)arg2;
- (void)doLocationJSCallback:(int)arg1 coordinate:(struct CLLocationCoordinate2D)arg2;
- (_Bool)requestCurrentLocationInner_NoAlert:(id)arg1;
- (id)mqq_data_queryCurrentLocation_NoAlert:(id)arg1;
- (void)requestCurrentLocationInner:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)mqq_data_queryCurrentLocation:(id)arg1;
- (void)gotoTenpayViewWithUserInfo:(id)arg1;
- (void)gotoFriendSelectedVCMakeRedGift:(id)arg1;
- (void)mqq_qqcard_openQQCard:(id)arg1;
- (id)mqq_pay_openTenpayView:(id)arg1;
- (void)onJSRequestCheckQQProductEnablePay:(id)arg1;
- (void)onJSRequestCheckQQProductPay:(id)arg1;
- (id)mqq_coupon_addCoupon:(id)arg1;
- (id)mqq_nav_shareMessage:(id)arg1;
- (void)onJsRequestCallback:(id)arg1;
- (void)onJsRequestStopVideo:(id)arg1;
- (_Bool)invokeJsCallback:(id)arg1 withTs:(double)arg2;
- (_Bool)invokeJsCallback:(id)arg1 withNotification:(id)arg2;
- (void)onJSCallNative:(id)arg1;
- (void)unregisterJsNotificationsWhenViewDisappear;
- (void)registerJsNotificationsWhenViewAppear;
- (void)setUploadIcon;
- (void)dispatchJsEvent:(id)arg1 data:(id)arg2 fromSource:(id)arg3;
- (void)executeJsCallbackWithQueryForOpenApi:(id)arg1 code:(long long)arg2 argumentsString:(id)arg3;
- (void)executeJsCallbackWithQueryForOpenApi:(id)arg1 code:(long long)arg2 arguments:(id)arg3;
- (_Bool)isValidCallback:(id)arg1;
- (id)callbackFromQuery:(id)arg1;
- (void)executeJsCallbackWithQuery:(id)arg1 arguments:(id)arg2;
- (void)executeJsCallbackWithQuery:(id)arg1 argumentsFormat:(id)arg2;
- (void)executeJsCallback:(id)arg1 arguments:(id)arg2;
- (void)executeJsCallback:(id)arg1 argmentsFormat:(id)arg2;
- (id)serializeCallbackArgumentWithObject:(id)arg1;
- (id)buildCallbackArgumentStringWithFormat:(id)arg1 args:(char *)arg2;
- (void)executeGlobalCallbackWithID:(id)arg1 andArguments:(id)arg2;
- (void)executeJsScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)executeJsScript:(id)arg1;
- (void)returnResultToJs:(id)arg1 withQuery:(id)arg2;
- (void)returnResultToJs:(id)arg1;
- (void)showHotDot:(_Bool)arg1;
- (id)aioSwitchBannerTitle;
- (void)aioNotifyMessage:(id)arg1;
- (void)reportBounceRate;
- (void)logBounceRateStep:(int)arg1;
- (void)logBounceRateStart;
- (void)popAnimationFinished;
- (void)hidenAnimationStart;
- (void)popAnimationStart;
- (id)showPickerView:(id)arg1 doneAction:(SEL)arg2 target:(id)arg3;
- (void)showTroopMemberCard:(id)arg1;
@property(retain, nonatomic) NSString *regisPhone;
@property(retain, nonatomic) NSString *bindPhone;
@property(retain, nonatomic) NSNumber *isNewUserGuideView;
- (long long)webShareShowShareOrAction:(id)arg1;
- (_Bool)webShareIsButtonHide:(id)arg1;
- (_Bool)webShareIsButtonDisabled:(id)arg1;
- (void)webShareActivityDidAction:(id)arg1;
- (void)groupAppRightButton:(id)arg1;
- (void)reportGroupAppTime:(double)arg1;
- (void)editGroupOpenAPPListDone:(_Bool)arg1 error:(id)arg2;
- (void)checkAppUrlDone:(_Bool)arg1 respInfo:(id)arg2;

// Remaining properties
@property(retain, nonatomic) WebAdsorbDragButton *adsorbButton; // @dynamic adsorbButton;
@property(nonatomic) _Bool backoff; // @dynamic backoff;
@property(retain, nonatomic) NSDate *beginOpenWebviewTime; // @dynamic beginOpenWebviewTime;
@property(retain, nonatomic) NSMutableDictionary *behaviorOptions; // @dynamic behaviorOptions;
@property(retain, nonatomic) NSString *closeNotifyCallbackFunName; // @dynamic closeNotifyCallbackFunName;
@property(retain, nonatomic) UIButton *closeWebButton; // @dynamic closeWebButton;
@property(retain, nonatomic) NSString *currentBid; // @dynamic currentBid;
@property(retain, nonatomic) NSURL *currentURL; // @dynamic currentURL;
@property(readonly, nonatomic) NSURLRequest *currentURLRequest; // @dynamic currentURLRequest;
@property(nonatomic) _Bool customLeftButton; // @dynamic customLeftButton;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool disableSwipeBack; // @dynamic disableSwipeBack;
@property(nonatomic) _Bool dontGoBackWhenClickLeftButton; // @dynamic dontGoBackWhenClickLeftButton;
@property(nonatomic) _Bool dontUseGlobalFontScale; // @dynamic dontUseGlobalFontScale;
@property(nonatomic) long long enterSource; // @dynamic enterSource;
@property(copy, nonatomic) NSString *failLoadingURL; // @dynamic failLoadingURL;
@property(nonatomic) double finishLoadTime; // @dynamic finishLoadTime;
@property(nonatomic) _Bool firstRequest; // @dynamic firstRequest;
@property(retain, nonatomic) QQWebViewDynamicFontSetting *fontSizeController; // @dynamic fontSizeController;
@property(retain, nonatomic) UIView *fontSizeScreenMask; // @dynamic fontSizeScreenMask;
@property(retain, nonatomic) NSMutableArray *fullMenuItemArray; // @dynamic fullMenuItemArray;
@property(retain, nonatomic) UIImageView *fullScreenActionMenuView; // @dynamic fullScreenActionMenuView;
@property(retain, nonatomic) UIView *fullScreenMask; // @dynamic fullScreenMask;
@property(nonatomic) _Bool hasFinishLoading; // @dynamic hasFinishLoading;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *httpMethod; // @dynamic httpMethod;
@property(nonatomic) _Bool isForbiddenLongPressForPic; // @dynamic isForbiddenLongPressForPic;
@property(nonatomic) _Bool isGameCenter; // @dynamic isGameCenter;
@property(nonatomic) _Bool isQRCodeResultMode; // @dynamic isQRCodeResultMode;
@property(nonatomic) id <QQRichStateJsHelperDelegate> jsDelegate; // @dynamic jsDelegate;
@property(retain, nonatomic) NSString *leftButtonCustomCallback; // @dynamic leftButtonCustomCallback;
@property(retain, nonatomic) NSString *leftButtonStr; // @dynamic leftButtonStr;
@property(nonatomic) long long loadNum; // @dynamic loadNum;
@property(readonly, nonatomic) UIActivityIndicatorView *loadingView; // @dynamic loadingView;
@property(nonatomic) __weak UINavigationController *navi; // @dynamic navi;
@property(nonatomic) float navigationBarAlpha; // @dynamic navigationBarAlpha;
@property(nonatomic) _Bool noResetTitle; // @dynamic noResetTitle;
@property(nonatomic) _Bool notAppendSid; // @dynamic notAppendSid;
@property(retain, nonatomic) QQWebViewOfflineUpdateInfo *offlineUpdateInfo; // @dynamic offlineUpdateInfo;
@property(nonatomic) _Bool openLinkInNewWebView; // @dynamic openLinkInNewWebView;
@property(retain, nonatomic) NSMutableArray *openTimeArray; // @dynamic openTimeArray;
@property(copy, nonatomic) NSString *origOpenURLStr; // @dynamic origOpenURLStr;
@property(retain, nonatomic) NSString *origOpenURLStrNoCredentials; // @dynamic origOpenURLStrNoCredentials;
@property(retain, nonatomic) NSString *originURL; // @dynamic originURL;
@property(nonatomic) int pbArticleSource; // @dynamic pbArticleSource;
@property(retain, nonatomic) UIView *pbCommentBoxScreenMask; // @dynamic pbCommentBoxScreenMask;
@property(retain, nonatomic) QQPublicAccountLikeCommentBoxView *pbCommentBoxView; // @dynamic pbCommentBoxView;
@property(retain, nonatomic) NSString *pluginID; // @dynamic pluginID;
@property(retain, nonatomic) QQPluginInfo *pluginInfo; // @dynamic pluginInfo;
@property(retain, nonatomic) QQWebViewPluginScheduler *pluginScheduler; // @dynamic pluginScheduler;
@property(nonatomic) struct CGRect popGuestureRespondRect; // @dynamic popGuestureRespondRect;
@property(nonatomic) double popGuestureRespondWidth; // @dynamic popGuestureRespondWidth;
@property(retain, nonatomic) NSString *postParam; // @dynamic postParam;
@property(retain, nonatomic) NSURL *preCalcURL; // @dynamic preCalcURL;
@property(copy, nonatomic) NSString *qrcodeOrgStr; // @dynamic qrcodeOrgStr;
@property(nonatomic) _Bool recomposingState; // @dynamic recomposingState;
@property(retain, nonatomic) NSURL *referenceURL; // @dynamic referenceURL;
@property(retain, nonatomic) ODRefreshControl *refreshControl; // @dynamic refreshControl;
@property(retain, nonatomic) NSString *relatedAccountMsgId; // @dynamic relatedAccountMsgId;
@property(nonatomic) int relatedAccountType; // @dynamic relatedAccountType;
@property(retain, nonatomic) NSString *relatedAccountUin; // @dynamic relatedAccountUin;
@property(retain, nonatomic) NSString *reportSourceInfo; // @dynamic reportSourceInfo;
@property(retain, nonatomic) NSString *requestURLStr; // @dynamic requestURLStr;
@property(retain, nonatomic) NSString *rightButtonCallback; // @dynamic rightButtonCallback;
@property(retain, nonatomic) NSString *secRightButtonCallback; // @dynamic secRightButtonCallback;
@property(retain, nonatomic) UIImage *shareAppIcon; // @dynamic shareAppIcon;
@property(copy, nonatomic) NSDictionary *sharedData; // @dynamic sharedData;
@property(nonatomic) _Bool showSystemNaviWhenDisappear; // @dynamic showSystemNaviWhenDisappear;
@property(nonatomic) _Bool showSystemNaviWhenPop; // @dynamic showSystemNaviWhenPop;
@property(nonatomic) _Bool skipRedirect; // @dynamic skipRedirect;
@property(nonatomic) int source; // @dynamic source;
@property(retain, nonatomic) UILabel *sourceHostLabel; // @dynamic sourceHostLabel;
@property(nonatomic) int stackStyle; // @dynamic stackStyle;
@property(nonatomic) double startLoadingTime; // @dynamic startLoadingTime;
@property(retain, nonatomic) NSDate *startLoadingURLTime; // @dynamic startLoadingURLTime;
@property(retain, nonatomic) NSMutableDictionary *stepTimesDic; // @dynamic stepTimesDic;
@property(nonatomic) long long style; // @dynamic style;
@property(readonly) Class superclass;
@property(nonatomic) _Bool supportRightDragToGoBack; // @dynamic supportRightDragToGoBack;
@property(retain, nonatomic) UIView *tapGestureViewRefresh; // @dynamic tapGestureViewRefresh;
@property(nonatomic) _Bool timeout; // @dynamic timeout;
@property(retain, nonatomic) QQURLRichMsgData *webPagShareData; // @dynamic webPagShareData;
@property(retain, nonatomic) QQWebPageListenerWrapper *webPageListenerQQ; // @dynamic webPageListenerQQ;
@property(retain, nonatomic) QQWebPageListenerWrapper *webPageListenerQZne; // @dynamic webPageListenerQZne;
@property(retain, nonatomic) QQWebPageListenerWrapper *webPageListenerWX; // @dynamic webPageListenerWX;
@property(retain, nonatomic) QQWebPageListenerWrapper *webPageListenerWxZone; // @dynamic webPageListenerWxZone;
@property(retain, nonatomic) QQWebPageListenerWrapper *webPageShareListener; // @dynamic webPageShareListener;
@property(retain, nonatomic) NSString *webShareScrName; // @dynamic webShareScrName;
@property(retain, nonatomic) QQWebView *webView; // @dynamic webView;
@property(retain, nonatomic) NSURL *webpagSetShareURL; // @dynamic webpagSetShareURL;
@property(nonatomic) int webviewType; // @dynamic webviewType;

@end

