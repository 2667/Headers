//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <QQMainProject/BaseURLConnectionDelegate-Protocol.h>

@class BaseURLConnection, NSMutableArray, NSString;

@interface QQOpenReportManager : NSObject <BaseURLConnectionDelegate>
{
    NSMutableArray *currentReportArray_;
    NSMutableArray *sendingReportArray_;
    _Bool useBackupIp_;
    BaseURLConnection *connection_;
    NSString *reportDomain_;
    long long reportAppid_;
    long long reportInternal_;
    long long reportFrequency_;
    long long reportCount_;
    _Bool isFullReport_;
    _Bool isUseGzip_;
    NSString *releaseVesion_;
    NSString *_sdkv;
    NSString *_appid;
}

+ (id)getInstance;
@property(retain, nonatomic) NSString *appid; // @synthesize appid=_appid;
@property(retain, nonatomic) NSString *sdkv; // @synthesize sdkv=_sdkv;
@property(retain, nonatomic) NSString *releaseVesion; // @synthesize releaseVesion=releaseVesion_;
@property(nonatomic) long long reportCount; // @synthesize reportCount=reportCount_;
@property(nonatomic) long long reportInternal; // @synthesize reportInternal=reportInternal_;
@property(retain, nonatomic) NSString *reportDomain; // @synthesize reportDomain=reportDomain_;
@property(retain, nonatomic) BaseURLConnection *connection; // @synthesize connection=connection_;
@property(nonatomic) _Bool useBackupIp; // @synthesize useBackupIp=useBackupIp_;
@property(retain, nonatomic) NSMutableArray *sendingReportArray; // @synthesize sendingReportArray=sendingReportArray_;
@property(retain, nonatomic) NSMutableArray *currentReportArray; // @synthesize currentReportArray=currentReportArray_;
- (void)gameTeamUpClickReport:(int)arg1;
- (void)gameTeamUpReport:(int)arg1 result:(int)arg2 isFullTeam:(_Bool)arg3 isLeader:(_Bool)arg4;
- (void)setSDKV:(id)arg1;
- (int)setShareType:(id)arg1;
- (void)cgiShareReportShareProcess:(int)arg1 result:(int)arg2 errorcode:(int)arg3 shareUrl:(id)arg4 thumbUrl:(id)arg5 thumbSize:(unsigned long long)arg6 timeCost:(int)arg7 lackItem:(int)arg8 shareFrom:(int)arg9 extraData:(id)arg10;
- (void)cgiShareReportShareProcess:(int)arg1 result:(int)arg2 errorcode:(int)arg3 shareUrl:(id)arg4 thumbUrl:(id)arg5 thumbSize:(unsigned long long)arg6 timeCost:(int)arg7 lackItem:(int)arg8 shareFrom:(int)arg9;
- (void)cgiShareReportClickEvent:(int)arg1 shareType:(int)arg2 selectType:(int)arg3 shareFrom:(int)arg4 errorType:(int)arg5;
- (void)cgiSSOLoginReport:(int)arg1 result:(int)arg2 serverCode:(int)arg3 time:(int)arg4 byHttp:(_Bool)arg5;
- (void)cgiSSOLoginReport:(int)arg1 result:(int)arg2 serverCode:(int)arg3 time:(int)arg4;
- (void)cgiShareReportWebShare:(int)arg1 succ:(int)arg2 lackItems:(int)arg3 toType:(int)arg4 error:(int)arg5 shareUrl:(id)arg6;
- (void)cgiShareReport3rdBundleID:(int)arg1 totype:(int)arg2 acttype:(int)arg3 uin:(long long)arg4 touin:(long long)arg5 appid:(id)arg6 result:(int)arg7 openid:(id)arg8 reporttype:(int)arg9 callsource:(int)arg10 sdkv:(id)arg11 bundleid:(id)arg12;
- (void)cgiShareReportTime:(int)arg1 totype:(int)arg2 acttype:(int)arg3 touin:(long long)arg4 result:(int)arg5 reporttype:(int)arg6 callsource:(int)arg7 sdkv:(id)arg8 time:(int)arg9;
- (void)cgiShareReport:(int)arg1 totype:(int)arg2 acttype:(int)arg3 uin:(long long)arg4 touin:(long long)arg5 appid:(id)arg6 result:(int)arg7 openid:(id)arg8 reporttype:(int)arg9 callsource:(int)arg10 sdkv:(id)arg11;
- (void)cgiLoginReport:(int)arg1 appid:(id)arg2 acttype:(int)arg3 loginstatus:(int)arg4 needauth:(int)arg5 uin:(long long)arg6 sdkv:(id)arg7;
- (id)commParamValue:(id)arg1;
- (void)reportData:(id)arg1 appid:(id)arg2 ret:(int)arg3 code:(int)arg4 uin:(long long)arg5 tmcost:(int)arg6 sdkversion:(id)arg7 detail:(id)arg8;
- (void)didConnectionFailed:(id)arg1;
- (void)didConnectionFinished:(int)arg1;
- (_Bool)checkForReportDataValid:(id)arg1;
- (id)getFromData:(id)arg1;
- (id)getReportData:(id)arg1;
- (void)startReportData:(id)arg1 useBackupIp:(_Bool)arg2 backupIp:(id)arg3;
- (void)checkForReportNow;
- (_Bool)checkForFrequency;
- (void)getCommReportInfo;
- (id)compressReportInfo:(id)arg1;
- (void)getDefaultReportInfo;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

