//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import <QQMainProject/QZAssetCompressProtocol-Protocol.h>

@class AVAsset, MQZFacePicModel, NSArray, NSCondition, NSDictionary, NSError, NSString, NSURL, QQAsset, QZEasterEggImageInfo, QzonePhotoModel, UIImage;

@interface MQZImagePickerModel : NSObject <QZAssetCompressProtocol>
{
    NSString *_uuid;
    NSDictionary *_mediaMetadata;
    QQAsset *_asset;
    NSString *_clientKey;
    long long _batchId;
    unsigned long long _processDuration;
    _Bool _isGif;
    UIImage *_thumbImage;
    NSString *_thumbImagePath;
    UIImage *_bigImage;
    NSString *_bigImagePath;
    unsigned long long _bigImageSize;
    UIImage *_hdImage;
    NSString *_hdImagePath;
    unsigned long long _hdImageSize;
    UIImage *_faceImage;
    NSString *_faceImagePath;
    unsigned long long _faceImageSize;
    UIImage *_orgImage;
    NSString *_orgImagePath;
    unsigned long long _orgImageSize;
    struct CGSize _orgImageResolution;
    long long _orgImageRotation;
    long long _status;
    long long _failedStatus;
    long long _scaleType;
    QZEasterEggImageInfo *_easterEggImageInfo;
    NSURL *_assetURL;
    NSString *_assetIdentifier;
    long long _uploadEntrance;
    NSString *_gifUrlInEasterEgg;
    struct CGSize _oriImgSize;
    NSString *_fileLocalPath;
    AVAsset *_avasset;
    NSString *_avassetPath;
    NSString *_photoTagResult;
    NSString *_photoTagString;
    int _xo;
    UIImage *_unscaledImage;
    NSCondition *_loadAssetCondition;
    NSCondition *_compressCondition;
    _Bool _shouldLoadAsset;
    _Bool _supportOrgiHevc;
    double _lowQuality;
    double _hightQuality;
    struct CGSize _hdImageResolution;
    struct CGSize _bigImageResolution;
    double _initTime;
    NSError *_error;
    _Bool _supportHEVCEncode;
    _Bool _isQzoneImage;
    _Bool _recordVideo;
    _Bool _hasDetectedFace;
    _Bool _isRecommendGif;
    _Bool _isVideoComposeCompleted;
    int _assetType;
    QzonePhotoModel *_photoModel;
    double _videoDur;
    double _ration;
    NSArray *_recommendGifImages;
    NSDictionary *_editedVideoInfo;
    NSString *_editedVideoPath;
    NSString *_videoUploadPath;
    unsigned long long _uploadSize;
    MQZFacePicModel *_facePicModel;
}

+ (double)lowQuality;
+ (double)highQuality;
+ (int)qualityArrays:(id)arg1;
@property(retain, nonatomic) MQZFacePicModel *facePicModel; // @synthesize facePicModel=_facePicModel;
@property(nonatomic) unsigned long long uploadSize; // @synthesize uploadSize=_uploadSize;
@property(retain, nonatomic) NSString *videoUploadPath; // @synthesize videoUploadPath=_videoUploadPath;
@property(retain, nonatomic) NSString *editedVideoPath; // @synthesize editedVideoPath=_editedVideoPath;
@property(nonatomic) _Bool isVideoComposeCompleted; // @synthesize isVideoComposeCompleted=_isVideoComposeCompleted;
@property(retain, nonatomic) NSDictionary *editedVideoInfo; // @synthesize editedVideoInfo=_editedVideoInfo;
@property(retain, nonatomic) NSArray *recommendGifImages; // @synthesize recommendGifImages=_recommendGifImages;
@property(nonatomic) double ration; // @synthesize ration=_ration;
@property(nonatomic) _Bool isRecommendGif; // @synthesize isRecommendGif=_isRecommendGif;
@property(nonatomic) _Bool hasDetectedFace; // @synthesize hasDetectedFace=_hasDetectedFace;
@property(nonatomic, getter=isRecordVideo) _Bool recordVideo; // @synthesize recordVideo=_recordVideo;
@property(nonatomic) double videoDur; // @synthesize videoDur=_videoDur;
@property(nonatomic) int assetType; // @synthesize assetType=_assetType;
@property(retain, nonatomic) QzonePhotoModel *photoModel; // @synthesize photoModel=_photoModel;
@property(nonatomic) _Bool isQzoneImage; // @synthesize isQzoneImage=_isQzoneImage;
@property(nonatomic) unsigned long long faceImageSize; // @synthesize faceImageSize=_faceImageSize;
@property(retain, nonatomic) NSString *faceImagePath; // @synthesize faceImagePath=_faceImagePath;
@property(retain, nonatomic) UIImage *faceImage; // @synthesize faceImage=_faceImage;
@property(nonatomic) _Bool supportHEVCEncode; // @synthesize supportHEVCEncode=_supportHEVCEncode;
- (void).cxx_destruct;
- (_Bool)isPanoramaPhoto;
- (id)youTuUploadParamDict;
- (void)filterDeleteTags;
- (void)recodeTheDeleteTag:(id)arg1;
- (unsigned long long)findOriginalImageSize;
@property(nonatomic) unsigned long long bigImageSize; // @dynamic bigImageSize;
@property(nonatomic) unsigned long long hdImageSize; // @dynamic hdImageSize;
@property(retain, nonatomic) UIImage *orgImage; // @dynamic orgImage;
@property(retain, nonatomic) UIImage *hdImage; // @dynamic hdImage;
@property(retain, nonatomic) UIImage *bigImage; // @dynamic bigImage;
@property(retain, nonatomic) UIImage *thumbImage; // @dynamic thumbImage;
- (void)updateThumbImage:(id)arg1;
- (void)thumbImageAsync:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) struct CGSize oriImgSize; // @dynamic oriImgSize;
- (id)getAVassetPath;
- (id)getUploadOrgImagePath;
- (id)getUploadHdImagePath;
- (id)getUploadBigImagePath;
- (_Bool)findModelWithPath:(id)arg1;
- (id)getFakeImageWithModel;
- (id)getFakePathWithModel;
- (struct CGSize)bigImageResolution;
- (struct CGSize)hdImageResolution;
- (void)wakeWaitingThreads;
- (void)waitUntilCompressFinished;
- (void)cancelCompress;
- (void)blockForWait:(double)arg1;
@property(readonly, nonatomic) _Bool isGif; // @dynamic isGif;
- (void)updateGifPath;
- (void)checkIsGif;
- (_Bool)shouldFilterArrayFromSerializedXMP;
- (_Bool)isCompressing;
- (void)readPictureExif;
- (void)updatePathWhenInvalid;
- (void)prepareForImagePath;
- (void)loadAsset;
- (id)writeExifToImage:(id)arg1 quality:(double)arg2 dataUTI:(struct __CFString *)arg3;
- (_Bool)writeData:(id)arg1 toFile:(id)arg2;
- (void)writeThumbImageToFile;
- (void)updateAssetInfo;
- (void)scaleCoverImage;
- (_Bool)scaleFaceImage:(struct CGSize)arg1 quality:(double)arg2;
- (_Bool)scaleHDImage:(struct CGSize)arg1 quality:(double)arg2;
- (_Bool)scaleNormalImage:(struct CGSize)arg1 quality:(double)arg2;
- (void)scaleImages:(id)arg1 allResolution:(_Bool)arg2;
- (id)loadAssetImage:(id)arg1 savePath:(id)arg2 ret:(long long *)arg3;
- (id)loadImageAndSave:(long long)arg1;
- (void)scaleImage;
- (void)scaleVideoCover;
- (void)scaleAndWriteToFile;
- (void)startCompressing;
- (id)initWithAVsssetPath:(id)arg1 coverImage:(id)arg2;
- (id)initWithAssetURL:(id)arg1 assetIdentifier:(id)arg2 path:(id)arg3 scaleType:(long long)arg4 assetType:(int)arg5;
- (id)initWithAsset:(id)arg1 image:(id)arg2 path:(id)arg3 thumbImage:(id)arg4 scaleType:(long long)arg5 uuid:(id)arg6;
- (id)initWithImage:(id)arg1 thumbImage:(id)arg2 path:(id)arg3 uuid:(id)arg4 scaleType:(long long)arg5;
- (id)initWithAsset:(id)arg1 thumbImage:(id)arg2 scaleType:(long long)arg3;
- (id)initWithAsset:(id)arg1 scaleType:(long long)arg2;
- (id)initWithPath:(id)arg1 thumbImage:(id)arg2;
- (id)initWithPath:(id)arg1;
- (id)initWithImage:(id)arg1;
- (id)initWithAsset:(id)arg1;
- (id)init;

// Remaining properties
@property(retain, nonatomic) QQAsset *asset; // @dynamic asset;
@property(copy, nonatomic) NSString *assetIdentifier; // @dynamic assetIdentifier;
@property(retain, nonatomic) NSURL *assetURL; // @dynamic assetURL;
@property(nonatomic) long long batchId; // @dynamic batchId;
@property(retain, nonatomic) NSString *bigImagePath; // @dynamic bigImagePath;
@property(retain, nonatomic) NSString *clientKey; // @dynamic clientKey;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) QZEasterEggImageInfo *easterEggImageInfo; // @dynamic easterEggImageInfo;
@property(nonatomic) long long failedStatus; // @dynamic failedStatus;
@property(copy, nonatomic) NSString *fileLocalPath; // @dynamic fileLocalPath;
@property(retain, nonatomic) NSString *gifUrlInEasterEgg; // @dynamic gifUrlInEasterEgg;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSString *hdImagePath; // @dynamic hdImagePath;
@property(retain, nonatomic) NSDictionary *mediaMetadata; // @dynamic mediaMetadata;
@property(retain, nonatomic) NSString *orgImagePath; // @dynamic orgImagePath;
@property(nonatomic) struct CGSize orgImageResolution; // @dynamic orgImageResolution;
@property(nonatomic) long long orgImageRotation; // @dynamic orgImageRotation;
@property(nonatomic) unsigned long long orgImageSize; // @dynamic orgImageSize;
@property(retain, nonatomic) NSString *photoTagResult; // @dynamic photoTagResult;
@property(retain, nonatomic) NSString *photoTagString; // @dynamic photoTagString;
@property(readonly, nonatomic) unsigned long long processDuration; // @dynamic processDuration;
@property(nonatomic) long long scaleType; // @dynamic scaleType;
@property(nonatomic) long long status; // @dynamic status;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *thumbImagePath; // @dynamic thumbImagePath;
@property(nonatomic) long long uploadEntrance; // @dynamic uploadEntrance;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

