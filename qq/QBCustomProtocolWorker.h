//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <TlibDy/QBProtocolWorker.h>

@class NSCachedURLResponse, NSError, NSHTTPURLResponse, NSMutableData, NSString, NSURLRequest;

@interface QBCustomProtocolWorker : QBProtocolWorker
{
    double _startTime;
    _Bool _shouldLogRequest;
    _Bool _isOffline;
    NSHTTPURLResponse *_response;
    NSURLRequest *_request;
    NSCachedURLResponse *_cachedResposne;
    NSError *_requestError;
    NSString *_code;
    double _beginTime;
    NSMutableData *_respData;
}

+ (void)setupDNSSetting;
+ (id)qbProxyProtocolAddCustomHTTPHeader:(id)arg1;
+ (void)qbWebViewDidInitialized:(id)arg1 userAgent:(id)arg2;
+ (_Bool)qbProxyProtocolCanInitWithRequest:(id)arg1 isQBWebViewRequest:(_Bool)arg2;
@property(retain, nonatomic) NSMutableData *respData; // @synthesize respData=_respData;
@property(nonatomic) double beginTime; // @synthesize beginTime=_beginTime;
@property(nonatomic) _Bool isOffline; // @synthesize isOffline=_isOffline;
@property(nonatomic) _Bool shouldLogRequest; // @synthesize shouldLogRequest=_shouldLogRequest;
@property(copy, nonatomic) NSString *code; // @synthesize code=_code;
@property(retain, nonatomic) NSError *requestError; // @synthesize requestError=_requestError;
@property(retain, nonatomic) NSCachedURLResponse *cachedResposne; // @synthesize cachedResposne=_cachedResposne;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
- (void)qbProxyProtocolDidFinishLoadingWithCached:(id)arg1;
- (_Bool)qbProxyProtocolShouldStartLoading;
- (id)qbProxyProtocolDidReceiveData:(id)arg1;
- (_Bool)qbProxyProtocolDidReceiveResponse:(inout id *)arg1 error:(out id *)arg2;
- (void)logHttpRequestNow;
- (void)qbProxyProtocolDidFinishLoading;
- (void)qbProxyProtocolDidFailWithError:(id)arg1;
- (void)qbProxyProtocolDidDNSResolveResult:(id)arg1;
- (void)qbProxyProtocolDidResolveDNS:(double)arg1;
- (void)qbProxyProtocolDidStartLoading;
- (void)dealloc;

@end

