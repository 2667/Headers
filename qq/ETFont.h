//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSString, UIColor;

@interface ETFont : NSObject
{
    _Bool _bDisableBackground;
    _Bool _bDisableCrochet;
    _Bool _bDisableShadow;
    int _fontStyle;
    int _shadow_offset_x;
    int _shadow_offset_y;
    int _shadow_blur_radius;
    long long _fontId;
    double _pointSize;
    NSString *_fontPath;
    UIColor *_fontColor;
    UIColor *_shadow_color;
    long long _crochet_width;
    UIColor *_crochet_color;
    void *_diy_handle;
}

+ (_Bool)DIYFont_Global:(id)arg1 global:(struct DIYGlobalRec *)arg2;
+ (_Bool)CanDIY:(id)arg1 char:(unsigned short)arg2;
+ (_Bool)isDIYFont:(id)arg1;
+ (void)DIYFont_Delete_Handle:(void *)arg1;
+ (void *)DIYFont_Create_Handle:(id)arg1 json:(id)arg2;
+ (unsigned long long)getAnimationFrameNum:(void *)arg1;
+ (long long)getFrameDelay:(void *)arg1 frameIndex:(long long)arg2;
+ (void)drawForegroundLayer:(struct CGContext *)arg1 descriptor:(void *)arg2 frameIndex:(long long)arg3 font:(id)arg4;
+ (void)drawBackgroundLayer:(struct CGContext *)arg1 descriptor:(void *)arg2 frameIndex:(long long)arg3 font:(id)arg4;
+ (void)DecorationDraw:(struct CGPoint)arg1 bitmapContext:(struct CGContext *)arg2 etrumpFont:(id)arg3 descriptor:(void *)arg4 frameIndex:(long long)arg5 range:(struct _NSRange)arg6;
+ (void)releaseAnimationDescriptor:(void *)arg1;
+ (void *)createAnimationDescriptor:(id)arg1 lineCount:(long long)arg2 size:(struct CGSize)arg3 font:(id)arg4 lastLineWidth:(long long)arg5;
+ (long long)retrieveEmoticonCollection:(id)arg1 font:(id)arg2 collection:(unsigned int *)arg3 maxCount:(long long)arg4;
+ (void)destroyEmoticonHandle:(void *)arg1;
+ (void)drawEmoticonFrame:(void *)arg1 ctx:(struct CGContext *)arg2 index:(long long)arg3 font:(id)arg4;
+ (long long)getEmoticonFameDelay:(void *)arg1 index:(long long)arg2;
+ (long long)getFrameNum:(void *)arg1;
+ (struct CGSize)getEmoticonSize:(void *)arg1;
+ (void *)getEmoticonHandle:(id)arg1 font:(id)arg2 index:(long long)arg3;
+ (void)disableShadow:(id)arg1;
+ (void)setShadowInfo:(id)arg1 offsetX:(int)arg2 offsetY:(int)arg3 blurRadius:(int)arg4 color:(id)arg5;
+ (void)disableCrochet:(id)arg1;
+ (void)setCrochetInfo:(id)arg1 width:(long long)arg2 color:(id)arg3;
+ (_Bool)getSuggestedHintColor:(id)arg1 color:(id *)arg2;
+ (void)drawAtPoint:(struct CGPoint)arg1 bitmapContext:(struct CGContext *)arg2 text:(id)arg3 systemFont:(id)arg4 textColor:(id)arg5;
+ (_Bool)hasCrochet:(id)arg1 width:(double *)arg2 color:(id *)arg3;
+ (double)getAscenderDifference:(id)arg1;
+ (_Bool)hasShadow:(id)arg1 etrumpFont:(id)arg2 offset:(struct CGPoint *)arg3 blur:(long long *)arg4 shadownColor:(id *)arg5;
+ (_Bool)drawBackground:(id)arg1 bitmapContext:(struct CGContext *)arg2 x:(double)arg3 y:(double)arg4 etrumpFont:(id)arg5;
+ (_Bool)hasBackground:(id)arg1;
+ (void)getETFace:(struct ET_FaceRec *)arg1 etfont:(id)arg2;
+ (id)diyPendantFont:(unsigned int)arg1 size:(double)arg2;
+ (id)fontWithFontId:(long long)arg1 size:(double)arg2;
@property(nonatomic) void *diy_handle; // @synthesize diy_handle=_diy_handle;
@property(retain, nonatomic) UIColor *crochet_color; // @synthesize crochet_color=_crochet_color;
@property(nonatomic) long long crochet_width; // @synthesize crochet_width=_crochet_width;
@property(nonatomic) _Bool bDisableShadow; // @synthesize bDisableShadow=_bDisableShadow;
@property(nonatomic) _Bool bDisableCrochet; // @synthesize bDisableCrochet=_bDisableCrochet;
@property(nonatomic) _Bool bDisableBackground; // @synthesize bDisableBackground=_bDisableBackground;
@property(nonatomic) int shadow_blur_radius; // @synthesize shadow_blur_radius=_shadow_blur_radius;
@property(nonatomic) int shadow_offset_y; // @synthesize shadow_offset_y=_shadow_offset_y;
@property(nonatomic) int shadow_offset_x; // @synthesize shadow_offset_x=_shadow_offset_x;
@property(nonatomic) UIColor *shadow_color; // @synthesize shadow_color=_shadow_color;
@property(retain, nonatomic) UIColor *fontColor; // @synthesize fontColor=_fontColor;
@property(copy, nonatomic) NSString *fontPath; // @synthesize fontPath=_fontPath;
@property(nonatomic) int fontStyle; // @synthesize fontStyle=_fontStyle;
@property(nonatomic) double pointSize; // @synthesize pointSize=_pointSize;
@property(nonatomic) long long fontId; // @synthesize fontId=_fontId;
- (_Bool)isDecoratedFont;
- (void)innerDrawText:(struct CGPoint)arg1 bitmapContext:(struct CGContext *)arg2 text:(id)arg3 systemFont:(id)arg4 paraFont:(id)arg5;
- (void)innerDrawShadow:(struct CGPoint)arg1 bitmapContext:(struct CGContext *)arg2 text:(id)arg3 paraFont:(id)arg4;
- (void)innerDrawBackground:(struct CGPoint)arg1 bitmapContext:(struct CGContext *)arg2 text:(id)arg3 paraFont:(id)arg4;
- (double)getDescender;
- (double)getAscent;
- (double)getLineHeight;
- (int)drawTextAtPoint:(struct CGPoint)arg1 bitmapContext:(struct CGContext *)arg2 text:(id)arg3 color:(id)arg4 descriptor:(void *)arg5 frameIndex:(long long)arg6 range:(struct _NSRange)arg7;
- (int)drawTextAtPoint:(struct CGPoint)arg1 bitmapContext:(struct CGContext *)arg2 text:(id)arg3 color:(id)arg4;
- (struct CGSize)getTextSize:(id)arg1;
- (struct CGSize)commonTextProcess:(id)arg1 isDraw:(_Bool)arg2 point:(struct CGPoint)arg3 bitmapContext:(struct CGContext *)arg4 color:(id)arg5 retCount:(int *)arg6 descriptor:(void *)arg7 frameIndex:(long long)arg8 range:(struct _NSRange)arg9;
- (void)dealloc;
- (id)init;

@end

